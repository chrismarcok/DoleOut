{"version":3,"sources":["comps/Header.js","scripts/helper.js","comps/GroupComp.js","scripts/fetch.js","comps/NewGroupMemberRow.js","comps/GroupIcon.js","comps/NewGroupPopup.js","pages/GroupsPage.js","comps/Footer.js","pages/LandingPage.js","comps/LoginHeader.js","pages/RegisterPage.js","pages/LoginPage.js","comps/OtherExpense.js","comps/ExpensePic.js","comps/GroupMessage.js","comps/GroupMember.js","comps/OtherGroupComp.js","comps/ExpensePopup.js","pages/Group.js","pages/Profile.js","pages/NoMatch.js","pages/USERGroupsPage.js","pages/USERGroup.js","pages/USERProfile.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","user","undefined","loggedIn","Axios","get","then","response","console","log","data","displayName","setState","catch","err","className","href","id","this","Fragment","_id","React","Component","Helper","handleInputChange","event","target","value","name","Color","require","GroupComp","hover","editHover","deleteHover","members","loading","hoverOn","bind","hoverOff","hide","edit","confirm","redirect","document","querySelector","icon","style","backgroundColor","colorBg","display","admin","isDark","color","promises","i","length","push","axios","Promise","all","values","forEach","v","membersList","r","substring","div","lighten","hsl","string","darken","e","classList","contains","window","location","input","onMouseEnter","onMouseLeave","onClick","type","defaultValue","onChange","stringifyMembers","Fetch","fetchGroups","dummy_group_list","fetchUsers","dummy_user_list","fetchGroupMsgs","dummy_group_msgs","NewGroupMemberRow","indicator","checkValid","num","val","validator","status","finally","placeholder","maxLength","newRow","GroupIcon","iconName","AColorPicker","NewGroupPopup","users","title","groupIcon","groupMembers","groupColor","pickerOpen","selectColorTxt","iconLst","numMembers","selectColor","getMembers","from","on","picker","String","preventDefault","usernameInputs","querySelectorAll","memberLst","added","m","filter","includes","curIcon","closeFunction","newGroup","addGroup","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","closePopup","alert","newDiv","createElement","appendChild","ReactDOM","render","groupId","acp-show-hex","acp-show-rgb","acp-show-hsl","acp-palette","map","selectIcon","key","uid","createGroup","close","GroupsPage","groups","group","showPopup","openPopup","LandingPage","script","src","async","body","Footer","LoginHeader","regex","RegExp","RegisterPage","username","password","rePassword","keyCode","test","checkRegistered","action","method","required","onKeyDown","register","LoginPage","login","OtherExpense","msg","backgroundImage","picUrl","expense","Number","remaining","toFixed","ExpensePic","member","paid","GroupMessage","currentUserId","currentlyPaying","payAmount","expenseRemaining","youOwe","toggleExpense","handleInput","deductPayment","delete","cost","amount","rounded","parseFloat","Math","round","closebtn","container","hideExpense","youOweNewAmt","update","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","timeConverter","date","content","min","max","step","getMsg","getExpense","GroupMember","clickEvent","OtherGroupComp","ExpensePopup","expenseTitle","expenseContent","expenseCost","expenseMembers","createExpense","getTime","addExpense","createNewMemberRow","result","costInputField","onPointerDown","onBlur","formatCost","Group","newMsg","updateSmallExpense","hideSmallExpense","scrollToBottomOfChat","newSmallExpense","scrollToExpense","groupInput","groupMemberAddInput","addingMember","getInput","addMember","toggleAddUser","getGroup","msgBox","scrollTop","scrollHeight","group_number","match","params","g","parseInt","usersFiltered","u","newDivClass","addUserInput","addMemberCntr","scrollIntoView","innerText","msgs","to","togglePopup","Profile","firstname","lastname","avatar","description","email","pref","paypal","editing","toggleEdit","getUser","firstName","lastName","preference","user_number","userNumber","getUserNum","rel","NoMatch","role","aria-label","axiosError","Error","memberIDs","App","exact","path","component","USERGroupsPage","USERGroup","USERProfile","Boolean","hostname","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26f62ec2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      user: undefined,\r\n      loggedIn: false,\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    Axios.get('/api/me')\r\n    .then( response => {\r\n      console.log(`${response.data.displayName} is logged in`);\r\n      this.setState({\r\n        user: response.data,\r\n        loggedIn: true\r\n      })\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"headerbox\">\r\n          <a href=\"/\">\r\n            <div className=\"header-logo\">\r\n            </div>\r\n          </a>\r\n          <ul className=\"header-left-ul\">\r\n            <a href=\"/\">\r\n              <li className=\"header-li\">\r\n                <div className=\"li-content\">\r\n                  Home <i className=\"fa fa-home\"></i>\r\n                </div>\r\n              </li>\r\n            </a>\r\n            <a href=\"/groups\" id=\"header-group-link\">\r\n              <li className=\"header-li\">\r\n                  <div className=\"li-content\">\r\n                    Groups <i className=\"fa fa-users\"></i>\r\n                  </div>\r\n              </li>\r\n            </a>\r\n          </ul>\r\n          <ul className=\"header-right-ul\" >\r\n            {\r\n              this.state.loggedIn ? \r\n              <React.Fragment>\r\n                <a href={\"/u/\" + this.state.user._id} id=\"header-profile\"> \r\n                  <li className=\"header-li\">\r\n                      <div className=\"li-content\">\r\n                        <span className=\"header-username\">Profile</span> <i className=\"fa fa-user\"></i>\r\n                      </div>\r\n                  </li>\r\n                </a>\r\n                <a href=\"/logout\" id=\"header-logout\"> \r\n                <li className=\"header-li\">\r\n                    <div className=\"li-content\">\r\n                      <span className=\"header-username\">Logout</span> <i className=\"fa fa-sign-out\"></i>\r\n                    </div>\r\n                </li>\r\n                </a> \r\n              </React.Fragment>\r\n              : \r\n              <React.Fragment>\r\n                <a href=\"/register\" id=\"header-register\">\r\n                  <li className=\"header-li\">\r\n                    <div className=\"li-content\" >\r\n                      Register <i className=\"fa fa-user-plus\"></i>\r\n                    </div>\r\n                  </li>\r\n                </a>\r\n                <a href=\"/login\" id=\"header-login\">\r\n                  <li className=\"header-li\">\r\n                    <div className=\"li-content\" >\r\n                      Login <i className=\"fa fa-sign-in\"></i>\r\n                    </div>\r\n                  </li>\r\n                </a>\r\n              </React.Fragment>\r\n            }\r\n\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","/*\r\nUpdates the state of the \"this\" object. Called on some arbitrary event.\r\n*/\r\nconst Helper = {\r\n  /**\r\n   * Changes a state upon the changing of inputs\r\n   */\r\n  handleInputChange: function(event) {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n}\r\n\r\nexport { Helper as default }","import React from 'react'\r\nimport Helper from '../scripts/helper.js';\r\nimport axios from 'axios';\r\nconst Color = require('color');\r\n\r\n\r\n\r\n/* This is the group COMPONENT that is listed in the GroupPage*/\r\n\r\nclass GroupComp extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n      hover: false,\r\n      editHover: false,\r\n      deleteHover: false,\r\n      members: [],\r\n      loading: true,\r\n    };\r\n    this.hoverOn = this.hoverOn.bind(this);\r\n    this.hoverOff = this.hoverOff.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.confirm = this.confirm.bind(this);\r\n    this.redirect = this.redirect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const icon = document.querySelector(\"#icon\" + this.props.id);\r\n    icon.className = \"group-icon fa fa-\" + this.props.icon;\r\n    const group = document.querySelector(\".group-div-id-\" + this.props.id);\r\n    group.style.backgroundColor = this.props.colorBg;\r\n\r\n    const check = document.querySelector(\"#group-i-check-\" + this.props.id);\r\n    check.style.display = \"none\";\r\n\r\n    if (this.props.admin === false){\r\n      //in reality these buttons should be removed. this is ok for now.\r\n      document.querySelector(\"#group-i-edit-\" + this.props.id).style.display = \"none\";\r\n      document.querySelector(\"#group-i-trash-\" + this.props.id).style.display = \"none\";\r\n    }\r\n\r\n    if (Color(this.props.colorBg).isDark()){\r\n      document.querySelector(\".group-div-id-\" + this.props.id).style.color = \"white\";\r\n    } else {\r\n      document.querySelector(\".group-div-id-\" + this.props.id).style.color = \"black\";\r\n    }\r\n    const promises = []\r\n    for (let i = 0; i < this.props.members.length; i++){\r\n      promises.push(axios.get('/api/u/' + this.props.members[i]))\r\n    }\r\n    Promise.all(promises)\r\n    .then(values => {\r\n      const members = []\r\n      values.forEach( v => {\r\n        members.push(v.data.displayName)\r\n      })\r\n      this.setState({\r\n        members: members,\r\n        loading: false,\r\n      })\r\n    })\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  /**\r\n   * Returns the member list as a string with each member separated by commas.\r\n   */\r\n  stringifyMembers(membersList) {\r\n    if (membersList.length === 0) {\r\n      return \"No members.\"\r\n    }\r\n    let r = \"\"\r\n    for (let i = 0; i < membersList.length; i++) {\r\n      r += membersList[i] + \", \"\r\n    }\r\n    return r.substring(0, r.length - 2)\r\n  }\r\n\r\n  hoverOn(){\r\n    const div = document.querySelector(\".group-div-id-\" + this.props.id);\r\n    if (Color(this.props.colorBg).isDark()){\r\n      div.style.backgroundColor = Color(this.props.colorBg).lighten(0.1).hsl().string();\r\n    } else {\r\n      div.style.backgroundColor = Color(this.props.colorBg).darken(0.1).hsl().string();\r\n    }\r\n    this.setState(\r\n      {\r\n        hover: true\r\n      }\r\n    );\r\n  }\r\n\r\n  hoverOff(){\r\n    const div = document.querySelector(\".group-div-id-\" + this.props.id);\r\n    div.style.backgroundColor = this.props.colorBg;\r\n    this.setState(\r\n      {\r\n        hover: false\r\n      }\r\n    );\r\n  }\r\n\r\n  redirect(e){\r\n    if (!e.target.classList.contains(\"fa\") && !e.target.classList.contains(\"group-comp-input\")){\r\n      if (this.props.admin){\r\n        window.location = \"/g/\" + this.props.id + \"/admin\";\r\n      } else {\r\n        window.location = \"/g/\" + this.props.id;\r\n      } \r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hides a group in the groups page, called when a group is deleted.\r\n   * Will require a server call to remove the group from a database\r\n   */\r\n  hide(){\r\n    document.querySelector(\".group-div-id-\" + this.props.id).style.display = \"none\";\r\n  }\r\n\r\n  /**\r\n   * Allows the name of a group to be edited using an input field.\r\n   */\r\n  edit(){\r\n    const elem = document.querySelector(\"#group-name-id-\" + this.props.id);\r\n    elem.style.display = \"none\";\r\n    const input = document.querySelector(\"#group-comp-input-id-\" + this.props.id);\r\n    input.style.display = \"inline-block\";\r\n    const edit = document.querySelector(\"#group-i-edit-\" + this.props.id);\r\n    edit.style.display = \"none\";\r\n    const check = document.querySelector(\"#group-i-check-\" + this.props.id);\r\n    check.style.display = \"inline-block\";\r\n  }\r\n\r\n  /**\r\n   * Confirms whatever is in the group name input field to become the group's name.\r\n   * Will require a server call to actually change the group's name in our database.\r\n   */\r\n  confirm(){\r\n    const elem = document.querySelector(\"#group-name-id-\" + this.props.id);\r\n    elem.style.display = \"inline-block\";\r\n    const input = document.querySelector(\"#group-comp-input-id-\" + this.props.id);\r\n    input.style.display = \"none\";\r\n    this.setState({\r\n      name: input.value\r\n    });\r\n    const icon = document.querySelector(\"#group-i-edit-\" + this.props.id);\r\n    icon.style.display = \"inline-block\";\r\n    const check = document.querySelector(\"#group-i-check-\" + this.props.id);\r\n    check.style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className={\"group-div group-div-id-\" + this.props.id} onMouseEnter={this.hoverOn} onMouseLeave={this.hoverOff} onClick={this.redirect}>\r\n\r\n          <h1 className=\"grouppage-title\">\r\n            <i id={\"icon\" + this.props.id}></i> <span className=\"group-name\" id={\"group-name-id-\" + this.props.id}>{this.state.name}</span> <input className=\"group-comp-input\" id={\"group-comp-input-id-\" + this.props.id } type=\"text\" name=\"title\" defaultValue={this.state.name} onChange={Helper.handleInputChange.bind(this)}></input>\r\n          </h1>\r\n          <div className=\"group-div-change-btns\">\r\n            <div>\r\n              \r\n                <i className=\"fa fa-check\" id={\"group-i-check-\" + this.props.id} onClick={this.confirm}></i>\r\n              \r\n              <i className=\"fa fa-edit\" id={\"group-i-edit-\" + this.props.id} onClick={this.edit}></i>\r\n              <i className=\"fa fa-trash\" id={\"group-i-trash-\" + this.props.id} onClick={this.hide}></i>\r\n            </div>\r\n          </div>\r\n          <h3>\r\n            Members: {\r\n            this.state.loading ? \r\n            <span>Loading...</span>\r\n            : this.stringifyMembers(this.state.members)\r\n            }\r\n          </h3>\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default GroupComp","import dummy_user_list from '../data/dummy_user_list.json';\r\nimport dummy_group_list from '../data/dummy_group_list.json';\r\nimport dummy_group_msgs from '../data/dummy_group_msgs.json';\r\n\r\n\r\nconst Fetch = {\r\n  fetchGroups() {\r\n    //would require a server call to pull this information from our database\r\n    return dummy_group_list\r\n\r\n  },\r\n  \r\n  fetchUsers(){\r\n    //would require a server call to pull this information from our database\r\n    return dummy_user_list;\r\n  },\r\n  \r\n  fetchGroupMsgs() {\r\n    //would require a server call to pull this information from our database\r\n    return dummy_group_msgs;\r\n  },\r\n}\r\n\r\nexport {  Fetch as default }","import React from 'react'\r\nimport Axios from 'axios';\r\n\r\nclass NewGroupMemberRow extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      loading: false,\r\n      indicator: \"?\"\r\n    }\r\n    this.checkValid = this.checkValid.bind(this);\r\n  }\r\n  /**\r\n   * Determines if a given group member row holds a valid member to be added.\r\n   * Changes the text display of the group member row showing if the member is valid or not.\r\n   * @param num the index of the new group member row\r\n   */\r\n  checkValid(num){\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    const val = document.querySelector(\"#groupMembersInput-\" + num).value;\r\n    const validator = document.querySelector(\".new-member-confirmation-\" + num);\r\n    if (val.length === 0){\r\n      this.setState({\r\n        indicator: \"?\",\r\n        loading: false\r\n      })\r\n      validator.style.color = \"black\";\r\n      return;\r\n    }\r\n    Axios.get('/api/exists/' + val)\r\n    .then( response => {\r\n      if (response.status === 200){\r\n        this.setState({\r\n          indicator: \"valid\"\r\n        });\r\n        validator.style.color = \"green\";\r\n      } \r\n    })\r\n    .catch( err => {\r\n      console.log(err)\r\n      this.setState({\r\n        indicator: \"invalid\"\r\n      })\r\n      validator.style.color = \"red\";\r\n    })\r\n    .finally( () => {\r\n      this.setState({\r\n        loading: false\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    const num = this.props.num - 1;\r\n    return (\r\n        <div className={\"new-group-member-row new-group-member-row-\" + num}>\r\n          <p>Member {this.props.num}</p>\r\n          <input className=\"group-member-input-field\" id={\"groupMembersInput-\" + num} type=\"text\" name=\"groupMembers\" placeholder=\"Enter Username\" maxLength=\"20\" onChange={() => this.checkValid(num)}></input> \r\n          <div className={\"new-member-confirmation new-member-confirmation-\" + num}>\r\n          {\r\n            this.state.loading ? \r\n            'loading...' : this.state.indicator\r\n          } \r\n          </div>\r\n          \r\n          <span className=\"new-member-row-btn\" onClick={this.props.newRow}> New Row </span>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default NewGroupMemberRow","import React from 'react'\r\n\r\nclass GroupIcon extends React.Component{\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"icon-container\" id={\"icon-choice-\" + this.props.iconName}><i className={\"fa fa-\" + this.props.iconName} ></i>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupIcon","import React from 'react';\r\nimport '../style/NewGroupPopup.css';\r\nimport ReactDOM from 'react-dom';\r\nimport NewGroupMemberRow from '../comps/NewGroupMemberRow';\r\nimport GroupIcon from '../comps/GroupIcon';\r\nimport { uid } from 'react-uid';\r\nimport Helper from '../scripts/helper.js';\r\nimport Axios from 'axios';\r\nconst AColorPicker = require('a-color-picker');\r\n\r\nclass NewGroupPopup extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.selectColor = this.selectColor.bind(this);\r\n      this.newRow = this.newRow.bind(this);\r\n      this.getMembers = this.getMembers.bind(this);\r\n  }\r\n\r\n  state = {\r\n      users: undefined,\r\n      title: \"\",\r\n      groupIcon: \"\",\r\n      groupMembers: \"\",\r\n      groupColor: \"#eee\",\r\n      pickerOpen: false,\r\n      selectColorTxt: \"Select Color\",\r\n      iconLst: [\"user\", \"user-secret\", \"user-md\", \"user-circle\", \"blind\", \"child\", \"male\", \"female\", \"wheelchair\", \"mouse-pointer\"],\r\n      icon: undefined,\r\n      numMembers: 1\r\n  }\r\n\r\n  componentDidMount() {\r\n    Axios.get('/api/users')\r\n    .then(response => {\r\n      this.setState({\r\n        users: response.data\r\n      })\r\n    })\r\n    .catch(err => console.log(err));\r\n\r\n    AColorPicker.from('.picker').on('change', (picker, color) => {\r\n      const colorPrev = document.querySelector(\".color-preview\");\r\n      colorPrev.style.backgroundColor = color;\r\n      this.setState({\r\n        groupColor: String(color)\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Picks a color from the color picker.\r\n   */\r\n  selectColor(e) {\r\n      e.preventDefault();\r\n      if (!this.state.pickerOpen) {\r\n        document.querySelector(\".picker\").style.display = \"block\";\r\n        this.setState({\r\n          pickerOpen: true,\r\n          selectColorTxt: \"Confirm Color\"\r\n        });\r\n      } else {\r\n        document.querySelector(\".picker\").style.display = \"none\";\r\n        this.setState({\r\n          pickerOpen: false,\r\n          selectColorTxt: \"Select Color\"\r\n        });\r\n      }\r\n  \r\n  }\r\n\r\n  /**\r\n   * Returns a list the members of a new group.\r\n   */\r\n  getMembers(id){\r\n      const usernameInputs = document.querySelectorAll(\".group-member-input-field\");\r\n      const memberLst = this.state.users;\r\n      const numMembers = this.state.numMembers;\r\n      const added = [id];\r\n      for (let i = 0; i < numMembers; i++){\r\n        const m = memberLst.filter( m => \r\n          m.displayName === usernameInputs[i].value\r\n        );\r\n        if (m.length === 0 || added.includes(m[0]._id)){\r\n          continue;\r\n        }\r\n        added.push(m[0]._id);\r\n      }\r\n      return added;\r\n  }\r\n\r\n  /**\r\n   * Selects the icon of a new group.\r\n   */\r\n  selectIcon(name) {\r\n      if (this.state.groupIcon !== \"\") {\r\n        const curIcon = this.state.groupIcon;\r\n        document.querySelector(\"#icon-choice-\" + curIcon).className = \"icon-container\";\r\n      }\r\n      this.setState({\r\n        groupIcon: name\r\n      });\r\n      document.querySelector(\"#icon-choice-\" + name).className = \"icon-container icon-selected\";\r\n  \r\n  }\r\n  \r\n  /**\r\n   * Closes the new group popup.\r\n   */\r\n  close(e, closeFunction){\r\n      if (e.target.className === \"popup-close-btn\"){\r\n      closeFunction();\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Creates a new group based on the input fields and adds it to the groups page.\r\n   */\r\n  createGroup() {\r\n    if (this.state.title === \"\" || this.state.groupIcon === \"\") {\r\n      alert(\"Please fill out all fields!\");\r\n      return;\r\n    }\r\n    Axios.get('/api/me')\r\n    .then( response => {\r\n      if (response.status === 200){\r\n        const newGroup = {\r\n          name: this.state.title,\r\n          icon: this.state.groupIcon,\r\n          colorBg: this.state.groupColor,\r\n          members: this.getMembers(response.data._id),\r\n        }\r\n        console.log(newGroup.members);\r\n        this.props.addGroup(newGroup);\r\n    \r\n        /* HTTP Request */\r\n        console.log(\"Making POST req\");\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", '/groups');\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        xhr.send(JSON.stringify(newGroup));\r\n        //Close\r\n        this.props.closePopup();  \r\n      } else {\r\n        //This should never happen...\r\n        console.log(\"there is nobody logged in. nothing happened\");\r\n        alert(\"Can't make a group if there is nobody logged in...\");\r\n      }\r\n      \r\n    })\r\n    .catch(err => console.log(err))\r\n    \r\n  }\r\n  \r\n  /**\r\n   * Creates a new group member row to add members to the new group.\r\n   */\r\n  newRow(){\r\n      const newDiv = document.createElement(\"div\")\r\n      newDiv.className = \"new-group-member-row-\" + this.state.numMembers;\r\n      document.querySelector(\".new-group-members-container\").appendChild(newDiv)\r\n      ReactDOM.render(<NewGroupMemberRow newRow={this.newRow} num={this.state.numMembers + 1} groupId={-1}/>, document.querySelector(\".new-group-member-row-\" + this.state.numMembers))\r\n      this.setState({\r\n        numMembers: this.state.numMembers + 1\r\n      });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className='popup' id ='new_group_popup'>\r\n          <div className='popup_inner'>\r\n            <h1>Create New Group</h1>\r\n            <form className = \"new-group-form\">\r\n              <h3> Group Title </h3>\r\n              <input id=\"groupTitleInput\" type=\"text\" name=\"title\" placeholder=\"Title\" onChange={Helper.handleInputChange.bind(this)}></input>\r\n              <h3> Members </h3>\r\n              <div className=\"new-group-members-container\">\r\n                <NewGroupMemberRow newRow={this.newRow} num={1} groupId={-1}/>\r\n              </div>\r\n              <h3> Color <div className=\"color-preview\"></div> </h3>\r\n              <button onClick={this.selectColor}>\r\n                {this.state.selectColorTxt}\r\n              </button>\r\n              <div className=\"picker\"\r\n                acp-show-hex=\"no\"\r\n                acp-show-rgb=\"no\"\r\n                acp-show-hsl=\"no\"\r\n                acp-palette=\"PALETTE_MATERIAL_CHROME\"></div>\r\n\r\n              <h3> Icon </h3>\r\n              {\r\n                this.state.iconLst.map( icon => {\r\n                  return(\r\n                    <span onClick={() => this.selectIcon(icon)} key={uid(icon)} >\r\n                      <GroupIcon iconName={icon} />\r\n                    </span>\r\n                  );\r\n                })\r\n              }\r\n\r\n            </form>\r\n            <div className=\"popup-btn-container\">\r\n                <button className=\"popup-create-btn\" onClick={() => this.createGroup()}> Create Group <i className=\"fa fa-users\"></i></button>\r\n                <button className=\"popup-close-btn\" onClick={(e) => this.close(e, this.props.closePopup)}> Close</button>\r\n              </div>\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default NewGroupPopup;","/**\r\n * This is the Group Page, where you select which group you want to open.\r\n * This is the view from the admin's perspective (as opposed to the user's)\r\n * The admin can rename and delete groups. The user cannot.\r\n */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header.js'\r\nimport GroupComp from '../comps/GroupComp.js'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport { uid } from 'react-uid'\r\nimport NewGroupPopup from '../comps/NewGroupPopup.js'\r\n\r\nclass GroupsPage extends React.Component {\r\n\r\n  groups = Fetch.fetchGroups();\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { showPopup: false };\r\n  }\r\n\r\n  /**\r\n   * Opens the new group popup.\r\n   */\r\n  openPopup() {\r\n    if(this.state.showPopup === false){\r\n      this.setState({\r\n        showPopup: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the new group popup.\r\n   */\r\n  closePopup() {\r\n    if(this.state.showPopup === true){\r\n      this.setState({\r\n        showPopup: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an new group and adds it to the groups page.\r\n   * This method is passed on as a prop to the create new group popup.\r\n   * Would need a server call to update our database with the new group.\r\n   */\r\n  createGroup = (group) => {\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = \"new-group-\" + uid(group);\r\n    document.querySelector(\".new-groups-div\").appendChild(newDiv);\r\n    ReactDOM.render(<GroupComp key={ uid(group) }\r\n                          name={ group.name }\r\n                          icon={ group.icon }\r\n                          colorBg={ group.colorBg }\r\n                          id={ uid(group) }\r\n                          members={ group.members }\r\n                          admin={true}\r\n                      />, document.querySelector(\".new-group-\" + uid(group)));    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header user={\"admin\"}/>\r\n        <ul className=\"group-ul\">\r\n          {\r\n            this.groups.map( group => {\r\n              return (\r\n                  <GroupComp key={ uid(group) }\r\n                        name={ group.name }\r\n                        icon={ group.icon }\r\n                        colorBg={ group.colorBg }\r\n                        id={ group.id }\r\n                        members={ group.members }\r\n                        admin={true}\r\n                  />\r\n              )\r\n            })\r\n          }\r\n          <div className=\"new-groups-div\"> </div>\r\n          <div className=\"group-div\">\r\n            <div className=\"group-add-btn\" onClick={this.openPopup.bind(this)}>\r\n              <div className=\"group-add-icon-container\">\r\n                <i className=\"fa fa-plus\"></i>\r\n                {this.state.showPopup ? \r\n                  <NewGroupPopup addGroup = {this.createGroup} closePopup={this.closePopup.bind(this)}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupsPage","import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer-banner\">\r\n        Team 53, for CSC309 Fall 2019. Christopher Marcok, Lance Oribello, David Choi.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from '../comps/Header.js'\r\nimport Footer from '../comps/Footer.js'\r\n\r\nclass LandingPage extends React.Component {\r\n    componentDidMount () {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"./script/canvas.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n            <div>\r\n                <Header />\r\n                <div className = \"jumbotron\">\r\n                    <canvas id=\"canvas\"></canvas>\r\n                </div> \r\n                <div className = \"above-jumbo\" >\r\n                    <h1 className=\"landing-main-txt\">\r\n                    <span className = \"main-header\" > DoleOut </span> \r\n                    </h1> \r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\r\n\r\nclass LoginHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"login-hdr\">\r\n          <h1>\r\n            <span className = \"login-span\" > {this.props.title} </span> \r\n          </h1>\r\n        </div> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginHeader;","import React from 'react';\r\nimport Header from '../comps/Header.js'\r\nimport LoginHeader from '../comps/LoginHeader.js'\r\nimport Helper from '../scripts/helper.js';\r\n\r\nconst regex = RegExp('^([a-zA-Z0-9 _-]+)$');\r\n\r\nclass RegisterPage extends React.Component {\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    rePassword: \"\",\r\n    users: []\r\n  }\r\n\r\n  /**\r\n   * Checks if the username is in the master user list.\r\n   */\r\n  checkRegistered(username){\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Registers a new user if all the input fields are valid.\r\n   * Would need a server call to update our database with the new user.\r\n   */\r\n  register(e) {\r\n    //button or enter key\r\n    if (e.keyCode === 13 || e.target.className === \"register-btn\"){\r\n      if (this.state.username === \"\"){\r\n        alert(\"your username should have at least one character\")\r\n        e.preventDefault();\r\n      } \r\n      else if (!regex.test(this.state.username)) {\r\n        alert(\"your username should match /^([a-zA-Z0-9 _-]+)$/\")\r\n        e.preventDefault();\r\n      }\r\n      else if (this.state.password.length <= 3){\r\n        alert(\"your password should have more than 3 characters\")\r\n        e.preventDefault();\r\n      }\r\n      else if (this.state.password !== this.state.rePassword){\r\n        alert(\"the passwords don't match\")\r\n        e.preventDefault();\r\n      }\r\n      else if (this.checkRegistered(this.state.username)){\r\n        alert(this.state.username + \" is already registered\")\r\n        e.preventDefault();\r\n      }\r\n      else {\r\n        console.log(\"Posting...\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <div className=\"login-container\">\r\n          <div className=\"login-inner\">\r\n            <LoginHeader title=\"Register\"/>\r\n            <form className=\"login-form\" action=\"/register\" method=\"post\">\r\n              <h3>\r\n                Username\r\n              </h3>\r\n              <input id=\"register-username\" type=\"text\" required name=\"username\" placeholder=\"Username\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.register(e)}></input>\r\n              <h3>\r\n                Password\r\n              </h3>\r\n              <input id=\"register-password\" type=\"password\" required name=\"password\" placeholder=\"Password\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.register(e)}></input>\r\n              <h3>\r\n                Confirm Password\r\n              </h3>\r\n              <input id=\"register-repassword\" type=\"password\" required name=\"rePassword\" placeholder=\"Password\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.register(e)}></input>\r\n              <button className=\"register-btn\" type=\"submit\" onClick={(e) => {this.register(e)}}>Register <i className=\"fa fa-user-plus\"></i></button>  \r\n            </form>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\nimport Header from '../comps/Header.js'\r\nimport LoginHeader from '../comps/LoginHeader'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport Helper from '../scripts/helper.js';\r\n\r\nclass LoginPage extends React.Component {\r\n  \r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    users: Fetch.fetchUsers()\r\n  }\r\n\r\n  login(e) {\r\n    if (e.keyCode === 13 || e.target.className === \"login-btn\"){\r\n      console.log(\"attempting to post...\")\r\n    } \r\n  }\r\n\r\n  getUserPassword(username){\r\n    const users = this.state.users\r\n    const user = users.filter(user => user.username === username)\r\n    return user[0].password\r\n  }\r\n\r\n  checkRegistered(username){\r\n    const users = this.state.users\r\n    const user = users.filter(user => user.username === username)\r\n    return user.length > 0\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n          <div className=\"login-container\">\r\n            <div className=\"login-inner\">\r\n            <LoginHeader title=\"Login\"/>\r\n              <form className=\"login-form\" action=\"/login\" method=\"post\">\r\n                <h3>\r\n                  Username\r\n                </h3>\r\n                <input id=\"login-username\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.login(e)}></input>\r\n                <h3>\r\n                  Password\r\n                </h3>\r\n                <input id=\"login-password\" type=\"password\" name=\"password\" placeholder=\"Password\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.login(e)}></input>\r\n                <button className=\"login-btn\" type=\"submit\" onClick={(e) => this.login(e)}>Login <i className=\"fa fa-sign-in\"></i></button>  \r\n              </form>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default LoginPage;","import React from 'react'\r\n\r\nclass OtherExpense extends React.Component{\r\n\r\n  componentDidMount(){\r\n    const pic = document.querySelector(\".expense-small-pic-id-\" + this.props.msg.user.id + \"-\" + this.props.msg.id);\r\n    pic.style.backgroundImage = \"url('\" + this.props.msg.user.picUrl + \"')\";\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className={\"expense-small expense-small-id-\" + this.props.msg.id}>\r\n          <div className=\"expense-small-pic-and-title\">\r\n            <div className={\"expense-small-pic expense-small-pic-id-\" + this.props.msg.user.id + \"-\" + this.props.msg.id }></div>\r\n            <b>{this.props.msg.expense.title}</b>\r\n          </div>\r\n          <p>${Number(this.props.msg.expense.remaining).toFixed(2)} remaining</p>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default OtherExpense","import React from 'react'\r\n\r\nclass ExpensePic extends React.Component{\r\n  \r\n  componentDidMount(){\r\n    const pic = document.querySelector(\".expense-pic-id-\" + this.props.member.id + \"-\" + this.props.id);\r\n    pic.style.backgroundImage = \"url('\" + this.props.member.picUrl + \"')\";\r\n    const picCover = document.querySelector(\".expense-pic-cover-id-\" + this.props.member.id + \"-\" + this.props.id);\r\n    picCover.style.display = this.props.member.paid ? \"block\" : \"none\";\r\n  }\r\n\r\n  /**\r\n   * Redirects you to the user's profile page.\r\n   */\r\n  redirect(){    \r\n    console.log(this.props.admin);\r\n    if (this.props.admin){\r\n      \r\n      window.location = \"/u/\" + this.props.member.id + \"/admin\";\r\n    } else {\r\n      window.location = \"/u/\" + this.props.member.id;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"expense-pic-small-container\">\r\n        <div className={\"expense-pic-cover expense-pic-cover-id-\" + this.props.member.id + \"-\" + this.props.id}>\r\n        </div>\r\n        <div className={\"expense-pic-small expense-pic-id-\" + this.props.member.id + \"-\" + this.props.id} onClick={() => this.redirect()}>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExpensePic","import React from 'react'\r\nimport ExpensePic from '../comps/ExpensePic'\r\nimport { uid } from 'react-uid'\r\n\r\nclass GroupMessage extends React.Component {\r\n\r\n  /* \r\n  A group message represents either a chat message, or an expense in the chat.\r\n  */\r\n\r\n constructor(props) {\r\n  super(props)\r\n\r\n  this.state = {\r\n    //code below requires a server call to obtain the currently logged in user\r\n    //hard-coded to always use \"user\", the account with user id 1\r\n    currentUserId: 1,\r\n    currentlyPaying: false,\r\n    payAmount: \"0.01\",\r\n    expenseRemaining: (this.props.msg.type === \"expense\") ? Number(this.props.msg.expense.remaining).toFixed(2) : undefined,\r\n    youOwe: undefined\r\n  }\r\n  this.toggleExpense = this.toggleExpense.bind(this);\r\n  this.handleInput = this.handleInput.bind(this);\r\n  this.deductPayment = this.deductPayment.bind(this);\r\n  this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pic = document.querySelector(\"#group-main-profile-pic-id-\" + this.props.msg.id);\r\n    pic.style.backgroundImage = \"url('\" + this.props.msg.user.picUrl + \"')\";\r\n    if (this.props.msg.type === \"expense\"){\r\n      this.setState({\r\n        youOwe: Number(Number(this.props.msg.expense.cost) / this.props.msg.expense.members.length).toFixed(2)\r\n      });\r\n      const members = this.props.msg.expense.members;\r\n      const filtered = members.filter( m => m.id === this.state.currentUserId);\r\n      if (filtered.length === 0 || this.props.msg.user.id === this.state.currentUserId){\r\n        //user shouldnt be able to pay this expense.\r\n        this.setState({\r\n          youOwe: Number(0).toFixed(2)\r\n        });\r\n        document.querySelector(\".you-owe-container-id-\" + this.props.msg.id).style.display = \"none\";\r\n        document.querySelector(\".expense-pay-btn\" + this.props.msg.id).style.display = \"none\";\r\n      }\r\n    }\r\n\r\n    if (this.props.admin === false){\r\n      document.querySelector(\".expense-delete-container-\" + this.props.msg.id).style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  redirect() {\r\n    if (this.props.admin){\r\n      window.location = \"/u/\" + this.props.msg.user.id + \"/admin\";\r\n    } else {\r\n      window.location = \"/u/\" + this.props.msg.user.id;\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Toggles whether or not the payment input element of an expense is displayed and editable.\r\n   */\r\n  toggleExpense(){\r\n    if (!this.state.currentlyPaying){\r\n      this.setState({\r\n        currentlyPaying: true\r\n      });\r\n      document.querySelector(\".expense-pay-btn\" + this.props.msg.id ).style.display = \"none\";\r\n      document.querySelector(\".expense-close-btn\" + this.props.msg.id ).style.display = \"block\";\r\n      document.querySelector(\".expense-payment-container\" + this.props.msg.id ).style.display = \"block\";\r\n    } else {\r\n      this.setState({\r\n        currentlyPaying: false\r\n      });\r\n      document.querySelector(\".expense-close-btn\" + this.props.msg.id ).style.display = \"none\";\r\n      document.querySelector(\".expense-pay-btn\" + this.props.msg.id ).style.display = \"block\";\r\n      document.querySelector(\".expense-payment-container\" + this.props.msg.id).style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  handleInput(){\r\n    this.setState(\r\n      {    \r\n        payAmount: document.querySelector(\"#paymentInput\" + this.props.msg.id).value\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Reduces the remaining cost of an expense depending on what a user inputs in the expense's payment input field.\r\n   * Will require a server call to edit an expense's information in our database.\r\n   */\r\n  deductPayment(){\r\n    if(Number(this.state.payAmount) < 0){\r\n      alert(\"Cannot pay a negative amount\");\r\n      return;\r\n    }\r\n    const amount = this.state.expenseRemaining - Number(this.state.payAmount)\r\n    let rounded = parseFloat(Math.round(amount * 100) / 100).toFixed(2);\r\n    if (rounded < 0.01){\r\n      rounded = Number(0).toFixed(2);\r\n      const closebtn = document.querySelector(\".expense-close-btn\" + this.props.msg.id);\r\n      const container = document.querySelector(\".expense-payment-container\" + this.props.msg.id);\r\n      closebtn.style.display = \"none\";\r\n      container.style.display = \"none\";\r\n      this.props.hideExpense(this.props.msg.id);\r\n      document.querySelector(\".expense-cover-\" + this.props.msg.id).style.display = \"block\";\r\n    }\r\n    let youOweNewAmt = Number(this.state.youOwe - Number(this.state.payAmount)).toFixed(2);\r\n    if (youOweNewAmt < 0){\r\n      youOweNewAmt = Number(0).toFixed(2);\r\n      alert(\"You paid more than required. The max amount has been paid instead.\")\r\n    }\r\n    this.setState({\r\n      expenseRemaining: rounded,\r\n      youOwe: youOweNewAmt\r\n    });\r\n    if (youOweNewAmt < 0.01){\r\n      document.querySelector(\".you-owe-txt-\" + this.props.msg.id).style.color = \"#00C853\";\r\n      document.querySelector(\".expense-pic-cover-id-\" + this.state.currentUserId + \"-\" + this.props.msg.expense.id).style.display = \"block\";\r\n    }\r\n    const update = this.props.update;\r\n    update(this.props.msg.id, rounded);\r\n  }\r\n\r\n  // taken from https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\r\n  timeConverter(UNIX_timestamp){\r\n    const a = new Date(UNIX_timestamp * 1000);\r\n    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    const year = a.getFullYear();\r\n    const month = months[a.getMonth()];\r\n    const date = a.getDate();\r\n    const hour = a.getHours();\r\n    const min = a.getMinutes();\r\n    const sec = a.getSeconds();\r\n    const time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n    return time;\r\n  }\r\n\r\n  /**\r\n   * Deletes a message from the group timeline.\r\n   * Will require a server call to delete the information from our database.\r\n   */\r\n  delete(){\r\n    document.querySelector(\".msg-id-\" + this.props.msg.id).style.display = \"none\";\r\n    if (this.props.msg.type === \"expense\"){\r\n      //removes the expense from the right sidebar\r\n      document.querySelector(\".expense-small-id-\" + this.props.msg.id).style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a new message element for the DOM.\r\n   */\r\n  getMsg() {\r\n    return (\r\n      <div className={\"msg-id-\" + this.props.msg.id}>\r\n        <div className=\"group-main-msg\">\r\n          <div className=\"group-main-msg-profile-pic\" id={\"group-main-profile-pic-id-\" + this.props.msg.id} onClick={() => this.redirect()}>\r\n          </div>\r\n          <div className={\"expense-delete-container expense-delete-container-\" + this.props.msg.id} onClick={this.delete}>\r\n            <i className=\"fa fa-trash\"></i>\r\n          </div>\r\n          <div className=\"group-main-msg-content\">\r\n            <strong>{this.props.msg.user.username}</strong> <span className=\"date-span\">{this.timeConverter(this.props.msg.date)}</span> <br />\r\n            {this.props.msg.content}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Returns a new expense element for the DOM.\r\n   */\r\n  getExpense() {\r\n    return (\r\n      <div className={\"msg-id-\" + this.props.msg.id}>\r\n        <div className=\"group-expense-msg-container\">\r\n          <div className=\"group-main-msg-profile-pic\" id={\"group-main-profile-pic-id-\" + this.props.msg.id} onClick={() => this.redirect()}>\r\n          </div>\r\n          <div className={\"expense-delete-container expense-delete-container-\" + this.props.msg.id} onClick={this.delete}>\r\n            <i className=\"fa fa-trash\"></i>\r\n          </div>\r\n          <b>{this.props.msg.user.username}</b> created a new expense for ${this.props.msg.expense.cost}: <span className=\"date-span\">{this.timeConverter(this.props.msg.date)}</span>\r\n          <div className=\"group-main-msg-content\">\r\n            <div className=\"expense-container\">\r\n              <div className={\"expense-cover expense-cover-\" + this.props.msg.id}>\r\n              </div>\r\n              <div className=\"expense-upper\">\r\n                <div className=\"expense-upper-left\">\r\n                  <h3>{this.props.msg.expense.title}</h3>\r\n                  <p><i>\"{this.props.msg.content}\"</i></p>\r\n                  <div className={\"you-owe-container-id-\" + this.props.msg.id}>\r\n                    <p className=\"you-owe-title\">You Owe:</p>\r\n                    <p className={\"you-owe-txt you-owe-txt-\" + this.props.msg.id}>${this.state.youOwe}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"expense-upper-right\">\r\n                  <div className=\"expense-total-remaining-title\">\r\n                    Total Remaining:\r\n                  </div>\r\n                  <div className={\"expense-remaining expense-remaining-\" + this.props.msg.id}>\r\n                    ${this.state.expenseRemaining}\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"expense-lower\">\r\n                <div className=\"expense-faces\">\r\n                  {\r\n                    this.props.msg.expense.members.map(m => {\r\n                      return (\r\n                        <ExpensePic key={uid(m)} member={m} id={this.props.msg.expense.id} admin={this.props.admin}/>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n                <div className=\"expense-pay\">\r\n                <div className={\"expense-pay-btn expense-pay-btn\" + this.props.msg.id} onClick={this.toggleExpense}>\r\n                    PAY\r\n                  </div>\r\n                  <div className={\"expense-close-btn expense-close-btn\" + this.props.msg.id} onClick={this.toggleExpense}>\r\n                    CLOSE\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={\"expense-payment-container expense-payment-container\" + this.props.msg.id }>\r\n              <h3>How much would you like to pay?</h3>\r\n              <input id={\"paymentInput\"+this.props.msg.id} type=\"number\" min=\"0.01\" max={String(this.props.msg.expense.remaining)} step=\"0.01\" defaultValue=\"0.01\" onChange={this.handleInput} />\r\n              <i className=\"fa fa-check\" id=\"expense-make-payment-btn\" onClick={this.deductPayment}></i>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.msg.type === \"msg\") {\r\n      return this.getMsg();\r\n    } else if (this.props.msg.type === \"expense\") {\r\n      return this.getExpense();\r\n    }\r\n  }\r\n}\r\n\r\nexport default GroupMessage","import React from 'react'\r\n\r\nclass GroupMember extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.clickEvent = this.clickEvent.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    const pic = document.querySelector(\"#groupmember-pic-\" + this.props.member.id)\r\n    pic.style.backgroundImage = \"url('\" + this.props.member.picUrl + \"')\"\r\n    if (this.props.admin === false){\r\n      document.querySelector(\".groupmember-delete-\" + this.props.member.id).style.display = \"none\";\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Redirects to a group member's profile page.\r\n   */\r\n  clickEvent(e){\r\n    const classLst = e.target.classList;\r\n    if (!classLst.contains(\"groupmember-delete\") && e.target.className !== \"fa fa-trash\"){\r\n      if (this.props.admin === true){\r\n        window.location.href = \"/u/\" + this.props.member.id + \"/admin\";\r\n      }\r\n      else {\r\n        window.location.href = \"/u/\" + this.props.member.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hides a group member, called when a member is deleted.\r\n   * Will require a server call to remove the member from a database\r\n   */\r\n  delete(){\r\n    document.querySelector(\".groupmember-id-\" + this.props.member.id).style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={ this.clickEvent }>\r\n        <div className={\"groupmember groupmember-id-\" + this.props.member.id}>\r\n          <div className={\"groupmember-pic\"} id={ \"groupmember-pic-\" + this.props.member.id }>\r\n          </div>\r\n          <h3 className=\"groupmember-name\">\r\n            {this.props.member.username}\r\n            </h3>\r\n          <div className={\"groupmember-delete groupmember-delete-\" + this.props.member.id} onClick={this.delete}><i className=\"fa fa-trash\"></i></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupMember","import React from 'react'\r\n\r\nclass OtherGroupComp extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.redirect = this.redirect.bind(this);\r\n  }\r\n\r\n  redirect(){\r\n    if (this.props.admin === true){\r\n      window.location = \"/g/\" +  this.props.group.id + \"/admin\";\r\n    } else {\r\n      window.location = \"/g/\" +  this.props.group.id;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (    \r\n      <div className=\"other-group-container\" onClick={this.redirect}>\r\n        {this.props.group.name}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OtherGroupComp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport NewGroupMemberRow from '../comps/NewGroupMemberRow';\r\nimport '../style/ExpensePopup.css';\r\nimport { uid } from 'react-uid';\r\nimport Helper from  '../scripts/helper.js';\r\n\r\nclass ExpensePopup extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.createNewMemberRow = this.createNewMemberRow.bind(this)\r\n  }\r\n\r\n  state = {\r\n    expenseTitle: \"\",\r\n    expenseContent: \"\",\r\n    expenseCost: \"\",\r\n    expenseMembers: \"\",\r\n    numMembers: 1\r\n  }\r\n\r\n  /**\r\n   * Creates a new expense based on the input fields and adds it to the group timeline.\r\n   */\r\n  createExpense = () => {\r\n    if (this.state.expenseTitle === \"\" || this.state.expenseCost === \"\" || this.state.expenseContent === \"\" || this.getMembers().length === 1){\r\n      alert(\"one or more fields is missing!\");\r\n      return;\r\n    }\r\n\r\n    if(this.state.expenseCost <= 0){\r\n      alert(\"please enter a positive cost\");\r\n      return;\r\n    }\r\n    const m = {\r\n      \"id\": 8,\r\n      \"groupId\": 0,\r\n      \"date\": (new Date()).getTime() / 1000,\r\n      \"type\": \"expense\",\r\n      \"expense\": {\r\n        \"id\": 0,\r\n        \"title\": this.state.expenseTitle,\r\n        \"cost\": Number(this.state.expenseCost).toFixed(2),\r\n        \"remaining\": Number(this.state.expenseCost).toFixed(2) - (this.state.expenseCost / this.getMembers().length),\r\n        \"members\": this.getMembers()\r\n      },\r\n      //code below requires a server call to obtain the currently logged in user\r\n      //hard-coded to always assume \"user\" created the expense\r\n      \"user\": {\r\n        \"id\": 1,\r\n        \"username\": \"user\",\r\n        \"password\": \"123\",\r\n        \"picUrl\": \"https://api.adorable.io/avatars/200/1\",\r\n        \"email\": \"dummy@dummy.com\",\r\n        \"firstName\": \"Firstname\",\r\n        \"lastName\": \"McLastname\",\r\n        \"paypal\": \"https://www.paypal.me/chrismarcok\",\r\n        \"preference\": \"paypal\",\r\n        \"description\": \"send me money please thank u :)\"\r\n      },\r\n      \"content\": this.state.expenseContent\r\n    }\r\n    if (this.props.admin === true){\r\n      m.user.id = 0;\r\n      m.user.username = \"admin\";\r\n      m.user.picUrl = \"https://api.adorable.io/avatars/200/0\";\r\n    }\r\n    m.id = uid(m);\r\n    m.expense.id = uid(m);\r\n\r\n    this.props.addExpense(m);\r\n    this.props.closePopup();\r\n  }\r\n\r\n  /**\r\n   * Returns an array of all the members of an expense.\r\n   */\r\n  getMembers(){\r\n    const usernameInputs = document.querySelectorAll(\".group-member-input-field\");\r\n    const memberLst = this.props.group.members;\r\n    const numMembers = this.state.numMembers;\r\n    const added = [];\r\n    //code below requires a server call to obtain the currently logged in user to add the new expense's member list\r\n    //hard-coded to always add \"user\" to the member list\r\n    const result = [{\r\n      \"id\": 1,\r\n      \"username\": \"user\",\r\n      \"password\": \"123\",\r\n      \"picUrl\": \"https://api.adorable.io/avatars/200/1\",\r\n      \"email\": \"dummy@dummy.com\",\r\n      \"firstName\": \"Firstname\",\r\n      \"lastName\": \"McLastname\",\r\n      \"paypal\": \"https://www.paypal.me/chrismarcok\",\r\n      \"preference\": \"paypal\",\r\n      \"description\": \"send me money please thank u :)\",\r\n      \"paid\": true\r\n    }];\r\n    if (this.props.admin === true){\r\n      result[0].id = 0;\r\n      result[0].username = \"admin\";\r\n      result[0].picUrl = \"https://api.adorable.io/avatars/200/0\";\r\n    }\r\n    for (let i = 0; i < numMembers; i++){\r\n      const m = memberLst.filter( m => \r\n        m.username === usernameInputs[i].value\r\n      );\r\n\r\n      if (m.length === 0 || added.includes(m[0].id)){\r\n        continue;\r\n      }\r\n      result.push(m[0]);\r\n      added.push(m[0].id);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Formats the cost input of the expense to include decimals.\r\n   */\r\n  formatCost(){\r\n    const costInputField = document.querySelector(\"#expenseCostInput\");\r\n    const val = document.querySelector(\"#expenseCostInput\").value;\r\n    costInputField.value = Number(val).toFixed(2);\r\n    if (Number(val) < 0){\r\n      costInputField.value = Number(0).toFixed(2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the expense popup.\r\n   */\r\n  close(e, closeFunction){\r\n    if (e.target.className === \"popup\" || e.target.className === \"popup-close-btn\"){\r\n      closeFunction();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new member row to the expense popup.\r\n   */\r\n  createNewMemberRow(){\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = \"new-member-expense-popup-id-\" + this.state.numMembers;\r\n    document.querySelector(\".newGroupMemberRow-spawn-here\").appendChild(newDiv);\r\n    ReactDOM.render(<NewGroupMemberRow newRow={this.createNewMemberRow} num={( this.state.numMembers + 1)} groupId={this.props.group.id}/>, document.querySelector(\".new-member-expense-popup-id-\" + this.state.numMembers));\r\n    this.setState({\r\n      numMembers: this.state.numMembers + 1\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='popup' onPointerDown={(e) => this.close(e, this.props.closePopup)}>\r\n        <div className='popup_inner'>\r\n          <h1>New Expense</h1>\r\n          <form className=\"new-expense-form\">\r\n              <h3>\r\n                Expense Title\r\n              </h3>\r\n              <input className=\"new-expense-form-input\" id=\"expenseTitleInput\" type=\"text\" name=\"expenseTitle\" placeholder=\"Title\" onChange={Helper.handleInputChange.bind(this)}></input>\r\n              <h3>\r\n                Content \r\n              </h3>\r\n              <input className=\"new-expense-form-input\" id=\"expenseContentInput\" type=\"text\" name=\"expenseContent\" placeholder=\"A Message About Your Expense\" onChange={Helper.handleInputChange.bind(this)}></input>\r\n              <h3>\r\n                Cost \r\n              </h3>\r\n              <input className=\"new-expense-form-input\" id=\"expenseCostInput\" type=\"number\" name=\"expenseCost\" placeholder=\"Ex. '9.99'\" min=\"0\" onChange={Helper.handleInputChange.bind(this)} onBlur={this.formatCost}></input>\r\n              <h3>\r\n                Members\r\n              </h3>\r\n              <NewGroupMemberRow num={1} newRow={this.createNewMemberRow} groupId={this.props.group.id}/>\r\n              <div className=\"newGroupMemberRow-spawn-here\">\r\n              </div>\r\n            </form>\r\n          <div className=\"popup-btn-container\">\r\n            <button className=\"popup-create-btn\" onClick={() => this.createExpense()}> Create Expense </button>\r\n            <button className=\"popup-close-btn\" onClick={(e) => this.close(e, this.props.closePopup)}> Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpensePopup;","/**\r\n * This is the group page from the ADMIN perspective (as opposed to the user's).\r\n *  The user cannot delete users or messages. The admin can.\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header';\r\nimport OtherExpense from '../comps/OtherExpense';\r\nimport GroupMessage from '../comps/GroupMessage';\r\nimport Fetch from '../scripts/fetch.js';\r\nimport GroupMember from '../comps/GroupMember';\r\nimport OtherGroupComp from '../comps/OtherGroupComp';\r\nimport { uid } from 'react-uid';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Helper from '../scripts/helper.js';\r\nimport ExpensePopup from '../comps/ExpensePopup.js'\r\n\r\n/* This is the actual group page. the group page that has 3 columns*/\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      groupInput: \"\",\r\n      showPopup: false,\r\n      groupMemberAddInput: \"\",\r\n      addingMember: false\r\n    }\r\n    this.getInput = this.getInput.bind(this);\r\n    this.addMember = this.addMember.bind(this);\r\n    this.toggleAddUser = this.toggleAddUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const group = this.getGroup();\r\n    if (group !== undefined){\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether or not the expense popup is showing\r\n   */\r\n  togglePopup(){\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Scrolls to the bottom of the chat. Called when the component mounts.\r\n   */\r\n  scrollToBottomOfChat() {\r\n    const msgBox = document.querySelector(\".group-main-content\");\r\n    msgBox.scrollTop = msgBox.scrollHeight;\r\n  }\r\n\r\n  /**\r\n   * Return the group object that has this group number.\r\n   */\r\n  getGroup() {\r\n    const { group_number } = this.props.match.params;\r\n    const groups = Fetch.fetchGroups()\r\n    const thisGroupLst = groups.filter(g => g.id === parseInt(group_number))\r\n    return thisGroupLst[0]\r\n  }\r\n\r\n  /**\r\n   * Creates an new expense and adds it to the group timeline and sidebar.\r\n   * This method is passed on as a prop to the create new expense popup.\r\n   * Would need a server call to update our database with the new expense.\r\n   */\r\n  createExpense = (expense) => {\r\n    const newMsg = document.createElement(\"div\")\r\n    newMsg.id = expense.id\r\n    document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n    ReactDOM.render(<GroupMessage msg={expense} key={expense.id} update={this.updateSmallExpense} hideExpense={this.hideSmallExpense} admin={true}/>, document.querySelector(\"#\" + expense.id))\r\n    this.scrollToBottomOfChat();\r\n\r\n    // Create the small expense in the sidebar.\r\n    const newSmallExpense = (\r\n      <div key={uid(expense)} onClick={(e) => this.scrollToExpense(e, expense)}>\r\n        <OtherExpense msg={expense} />\r\n      </div>\r\n    )\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = uid(expense);\r\n    document.querySelector(\".group-col-other-ul\").appendChild(newDiv);\r\n    ReactDOM.render(newSmallExpense, document.querySelector(\".\" + uid(expense)));\r\n    \r\n  }\r\n\r\n  /**\r\n   * Creates a new chat message and adds it to the group timeline based on the chat input field.\r\n   * Would need a server call to update our database with the new chat, as well as obtain the current logged in user.\r\n   */\r\n  getInput(e) {\r\n    const val = this.state.groupInput;\r\n    if ((e.keyCode === 13 || e.target === document.querySelector(\".group-main-send-btn\") || e.target === document.querySelector(\".fa-paper-plane\")) && val !== \"\") {\r\n      //Here we would need to get the current user object from a server. for now, just use this dummy user.\r\n      const m = {\r\n        \"id\": 123,\r\n        \"groupId\": this.getGroup().id,\r\n        \"date\": (new Date()).getTime() / 1000,\r\n        \"type\": \"msg\",\r\n        \"user\":\r\n        {\r\n          \"id\": 0,\r\n          \"username\": \"admin\",\r\n          \"password\": \"admin\",\r\n          \"picUrl\": \"https://api.adorable.io/avatars/200/0\",\r\n          \"email\": \"dummy@dummy.com\",\r\n          \"firstName\": \"Firstname\",\r\n          \"lastName\": \"McLastname\"\r\n        },\r\n        \"content\": val\r\n      }\r\n      m.id = uid(m);\r\n      const newMsg = document.createElement(\"div\")\r\n      newMsg.id = m.id\r\n      document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n      \r\n      ReactDOM.render(<GroupMessage msg={m} key={m.id} admin={true}/>, document.querySelector(\"#\" + m.id))\r\n\r\n      //Reset the state, and make textbox empty\r\n      document.querySelector(\"#group-input\").value = \"\"\r\n      this.setState({\r\n        \"groupInput\": \"\"\r\n      })\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new user to the group's member list.\r\n   * Would need a server call to update the group's new member in our database.\r\n   */\r\n  addMember(e){\r\n    //button or enter key\r\n    if (e.target.id === \"group-add-member-accept-btn\" || e.keyCode === 13){\r\n      const users = Fetch.fetchUsers();\r\n      const usersFiltered = users.filter( u => u.username === this.state.groupMemberAddInput);\r\n      if (usersFiltered.length === 0){\r\n        alert(\"no user by that username\")\r\n        return;\r\n      }\r\n      const groupMembers = this.getGroup().members;\r\n      const usersInGroupWithSameUsername = groupMembers.filter( m => m.username === this.state.groupMemberAddInput);\r\n      if (usersInGroupWithSameUsername.length !== 0){\r\n        alert(\"that user is already in this group!\");\r\n        return;\r\n      }\r\n      else {\r\n        // here we would make the server call to update our database\r\n        const newDiv = document.createElement(\"div\");\r\n        const newDivClass = String(uid(usersFiltered[0]));\r\n        newDiv.className =  newDivClass;\r\n        document.querySelector(\".group-generated-members\").appendChild(newDiv);\r\n        ReactDOM.render(<GroupMember member={usersFiltered[0]} admin={true}/>, document.querySelector(\".\"+newDivClass));\r\n        document.querySelector(\"#group-add-member-input\").value = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether the add new user input field is displayed.\r\n   */\r\n  toggleAddUser(){\r\n    const addUserInput = document.querySelector(\".group-add-member-input-container\");\r\n    const addMemberCntr = document.querySelector(\".group-add-member-container\");\r\n    if (!this.state.addingMember){\r\n      addUserInput.style.display = \"block\";\r\n      addMemberCntr.style.display = \"none\";\r\n    }\r\n    else {\r\n      addUserInput.style.display = \"none\";\r\n      addMemberCntr.style.display = \"block\";\r\n    }\r\n    this.setState({\r\n      addingMember: !this.state.addingMember\r\n    });\r\n    \r\n  }\r\n\r\n  /**\r\n   * Scrolls to the msg in question. Called when you click on the expense in the \r\n   * sidebar.\r\n   */\r\n  scrollToExpense(event, msg){\r\n    const elem = document.querySelector(\"#group-main-profile-pic-id-\" + msg.id);\r\n    elem.scrollIntoView();\r\n  }\r\n\r\n  /**\r\n   * Updates the expense in the sidebar.\r\n   */\r\n  updateSmallExpense(id, amount){\r\n    const txt = document.querySelector(\".expense-small-id-\" + id + \" p\");\r\n    txt.innerText = `$${amount} remaining`;\r\n  }\r\n\r\n  /**\r\n   * Hides the expense in the sidebar. Called when an expense is finished paying.\r\n   */\r\n  hideSmallExpense(id){\r\n    document.querySelector(\".expense-small-id-\" + id).style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    const group = this.getGroup()\r\n    const groups = Fetch.fetchGroups()\r\n    const msgs = Fetch.fetchGroupMsgs()\r\n\r\n    //No group exists with this id. redirect to 404 page.\r\n    if (group === undefined) {\r\n      return <Redirect to='/404' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header user=\"admin\"/>\r\n        <div className=\"group-container\">\r\n          <div className=\"group-col group-members-col\">\r\n            <div className=\"group-members-div\">\r\n              <div className=\"group-generated-members\">\r\n              {\r\n                group.members.map(member => {\r\n                  return (\r\n                    <GroupMember member={member} key={uid(member)} admin={true} />\r\n                  )\r\n                })\r\n              }\r\n              </div>\r\n              <div className=\"group-add-member-container\">\r\n                <div className=\"group-add-member-inner\" onClick={this.toggleAddUser}>\r\n                  <div className=\"group-add-member-btn\" >\r\n                    <i className=\"fa fa-plus\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"group-add-member-input-container\">\r\n                \r\n                <input id=\"group-add-member-input\" type=\"text\" name=\"groupMemberAddInput\" placeholder=\"Enter Username\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.addMember}></input>\r\n                \r\n                <i className=\"fa fa-check\" id=\"group-add-member-accept-btn\" onClick={this.addMember}></i>\r\n                <div className=\"group-add-member-cancel-btn\" onClick={this.toggleAddUser}> Cancel </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"group-col group-main-col\">\r\n            <div>\r\n              <div className=\"group-title\">\r\n                {group.name}\r\n              </div>\r\n\r\n              <div className=\"group-main-add-btn\">\r\n                <button onClick={this.togglePopup.bind(this)}> <i className=\"fa fa-plus\"></i> New Expense</button>\r\n                {this.state.showPopup ? \r\n                  <ExpensePopup addExpense = {this.createExpense} closePopup={this.togglePopup.bind(this)} group={group} admin={true}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"group-main-content\">\r\n              {\r\n                msgs.filter(m => m.groupId === group.id).map(msg => {\r\n                  return (\r\n                    <GroupMessage msg={msg} key={uid(msg)} update={this.updateSmallExpense} hideExpense={this.hideSmallExpense} admin={true}/>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n            <div className=\"group-input-container\">\r\n              <input id=\"group-input\" type=\"text\" name=\"groupInput\" placeholder=\"Type something...\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.getInput}></input>\r\n              <div className=\"group-main-send-btn\" onClick={this.getInput}><i className=\"fa fa-paper-plane\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"group-col group-other-col\">\r\n            <div className=\"other-title-expenses\">\r\n              <div className=\"other-title\">\r\n                <h3>Current Expenses</h3>\r\n              </div>\r\n              <ul className=\"group-col-other-ul\">\r\n                {\r\n                  msgs.filter(m => m.groupId === group.id && m.type === \"expense\").map(msg => {\r\n                    return (\r\n                      <div key={uid(msg)} onClick={(e) => this.scrollToExpense(e, msg)}>\r\n                        <OtherExpense msg={msg} />\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n            <div className=\"other-title\">\r\n              <h3>Other Groups</h3>\r\n            </div>\r\n            <ul className=\"group-col-other-ul\">\r\n              {\r\n                /* Get all groups but current one*/\r\n                groups.filter(g => g.id !== group.id).map(g => {\r\n                  return (\r\n                    <OtherGroupComp group={g} key={uid(g)} admin={true} />\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group","/**\r\n * This is the Profile Page.\r\n * This is the view from the admin's perspective (as opposed to the user's)\r\n * The admin can rename fields. The user cannot (although the user should be \r\n * able to change their own fields when logging in is implemented).\r\n */\r\n\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Header from '../comps/Header'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport '../style/Profile.css'\r\nimport Helper from '../scripts/helper.js';\r\n\r\nclass Profile extends React.Component{\r\n    \r\n    state = {\r\n        user: undefined,\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        avatar: \"\",\r\n        description: \"\",\r\n        email: \"\", \r\n        pref: \"\",\r\n        paypal: \"\",\r\n        editing: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.getUser()\r\n        if (user){\r\n            this.setState({\r\n                firstname: user.firstName,\r\n                lastname: user.lastName,\r\n                avatar: user.picUrl,\r\n                description: user.description,  \r\n                email: user.email, \r\n                pref: user.preference,\r\n                paypal: user.paypal,\r\n                user: user\r\n            });\r\n            const pic = document.querySelector(\"#profile-pic-\" + user.id);\r\n            pic.style.backgroundImage = \"url('\" + user.picUrl + \"')\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles whether the user can edit his or her information with displayed \r\n     * input fields. This is where we would need to update the server database that \r\n     * has the user's information too. (in the else section)\r\n     */\r\n    toggleEdit = () => {\r\n        if (!this.state.editing){\r\n            this.setState({\r\n                editing: true\r\n            });\r\n            document.querySelector(\".profile-edit-container\").style.display = \"block\";\r\n            document.querySelector(\".profile-save-btn\").style.display = \"block\";\r\n            document.querySelector(\".profile-edit-btn\").style.display = \"none\";\r\n        }\r\n        else {\r\n            this.setState({\r\n                editing: false\r\n            });\r\n            document.querySelector(\".profile-edit-container\").style.display = \"none\";\r\n            document.querySelector(\".profile-save-btn\").style.display = \"none\";\r\n            document.querySelector(\".profile-edit-btn\").style.display = \"block\";\r\n\r\n            const pic = document.querySelector(\"#profile-pic-\" + this.state.user.id);\r\n            pic.style.backgroundImage = \"url('\" + this.state.avatar + \"')\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the id number of this user.\r\n     */\r\n    getUserNum(){\r\n        const {user_number} = this.props.match.params\r\n        return user_number\r\n    }\r\n\r\n    /**\r\n     * Get the object representing this user\r\n     */\r\n    getUser(){\r\n        const userNumber = this.getUserNum();\r\n        const userList = Fetch.fetchUsers();\r\n        return userList.filter(user => user.id === parseInt(userNumber))[0];\r\n    }\r\n\r\n    render() {\r\n        const user = this.getUser();\r\n        if (user === undefined){\r\n            return <Redirect to='/404'/>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Header user=\"admin\"/>\r\n                <div className=\"profile-btn profile-edit-btn\" onClick={this.toggleEdit}>\r\n                    Edit <i className=\"fa fa-pencil\"></i>\r\n                </div>\r\n                <div className=\"profile-btn profile-save-btn\" onClick={this.toggleEdit}>\r\n                    Save <i className=\"fa fa-check\"></i>\r\n                </div>\r\n                \r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile-pic-and-name\">\r\n                        <div className=\"profile-pic\" id={\"profile-pic-\" + user.id}>\r\n                        </div>\r\n                        <div className=\"profile-name-container\">\r\n                            <h1>{user.username} <a href={this.state.paypal} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-cc-paypal\"></i></a></h1> \r\n                            {this.state.firstname} {this.state.lastname}\r\n                        </div>\r\n                        <div className=\"profile-desc\">\r\n                            <b>Description</b> \r\n                            <p>{this.state.description}</p>\r\n                            <br/>\r\n                            <b>Preferred Payment Method</b>\r\n                            <p>{this.state.pref}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-info-container\">\r\n                        <h3>Email</h3>\r\n                        <p>{this.state.email}</p>\r\n                    </div>\r\n                    <div className=\"profile-edit-container\">\r\n                        <p>First Name</p>\r\n                        <input type=\"text\" name=\"firstname\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.firstname}></input>\r\n                        <p>Last Name</p>\r\n                        <input type=\"text\" name=\"lastname\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.lastname}></input>\r\n                        <p>Avatar URL</p>\r\n                        <input type=\"text\" name=\"avatar\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.avatar}></input>\r\n                        <p>Description</p>\r\n                        <input type=\"text\" name=\"description\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.description}></input>\r\n                        <p>Preferred Payment Method</p>\r\n                        <input type=\"text\" name=\"pref\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.pref}></input>\r\n                        <p>Email</p>\r\n                        <input type=\"text\" name=\"email\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.email}></input>\r\n                        <p>PayPal URL</p>\r\n                        <input type=\"text\" name=\"paypal\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.paypal}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile ","import React from 'react'\r\n\r\nclass NoMatch extends React.Component {\r\n  /**\r\n   * our humorous 404 page :)\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"no-match\">\r\n        <h3>Error 404</h3>\r\n        <a href=\"http://niceme.me/\" id=\"emoji-404\">\r\n        <span role=\"img\" aria-label=\"clap\">click👏to👏go👏to👏nicememe.com👏</span>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoMatch","/**\r\n * This is the Group Page, where you select which group you want to open.\r\n * This is the view from the user's prospective (as opposed tot he admin's)\r\n * The admin can rename and delete groups. The user cannot.\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header.js';\r\nimport GroupComp from '../comps/GroupComp.js';\r\nimport { uid } from 'react-uid';\r\nimport NewGroupPopup from '../comps/NewGroupPopup.js';\r\nimport axios from 'axios';\r\n\r\nclass GroupsPage extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = { \r\n      groups: [],\r\n      showPopup: false,\r\n      axiosError: \"\",\r\n      loading: true,\r\n     };\r\n  }\r\n\r\n  componentDidMount(){\r\n    let user;\r\n    axios.get('/api/me')\r\n    .then( response => {\r\n      if (response.status === 200){\r\n        user = response.data;\r\n        return axios.get('/api/groups')\r\n      } else {\r\n        throw new Error(\"No user is logged in\");\r\n      }\r\n      \r\n    })\r\n    .then(response => {\r\n      const data = response.data\r\n      this.setState({\r\n        groups: data.filter( g => {\r\n          return g.memberIDs.includes(user._id)\r\n        }),\r\n        loading: false\r\n      });\r\n    })\r\n    .catch( \r\n      err => {\r\n        console.log(err);\r\n        this.setState(\r\n          {\r\n            axiosError: \"Could not retreive data.\",\r\n            loading: false\r\n          }\r\n      )});\r\n  }\r\n\r\n  /**\r\n   * Opens the new group popup.\r\n   */\r\n  openPopup() {\r\n    if(this.state.showPopup === false){\r\n      this.setState({\r\n        showPopup: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the new group popup.\r\n   */\r\n  closePopup() {\r\n    if(this.state.showPopup === true){\r\n      this.setState({\r\n        showPopup: false\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Creates an new group and adds it to the groups page.\r\n   * This method is passed on as a prop to the create new group popup.\r\n   * Would need a server call to update our database with the new group.\r\n   */\r\n  createGroup = (group) => {\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = \"new-group-\" + uid(group);\r\n    document.querySelector(\".new-groups-div\").appendChild(newDiv);\r\n    ReactDOM.render(<GroupComp key={ uid(group) }\r\n                          name={ group.name }\r\n                          icon={ group.icon }\r\n                          colorBg={ group.colorBg }\r\n                          id={ uid(group) }\r\n                          members={ group.members }\r\n                          admin={false}\r\n                      />, document.querySelector(\".new-group-\" + uid(group)));    \r\n  }\r\n\r\n  render() {\r\n    const { groups, axiosError, loading } = this.state;\r\n    \r\n    return (\r\n      <React.Fragment>\r\n        <Header user=\"user\"/>\r\n        <ul className=\"group-ul\">\r\n          {\r\n            loading ?\r\n            <div className=\"loading-txt\"> Loading... </div> : null\r\n          }{\r\n            (typeof(groups) === \"object\" && groups.length > 0 && !axiosError) ?\r\n            groups.map( group => {\r\n              return (\r\n                  <GroupComp key={ uid(group) }\r\n                        name={ group.name }\r\n                        icon={ group.icon }\r\n                        colorBg={ group.color }\r\n                        id={ group._id }\r\n                        members={ group.memberIDs }\r\n                        admin={false}\r\n                  />\r\n              )\r\n            }) : null\r\n          }{\r\n            (typeof(groups) === \"object\" && groups.length === 0 && !axiosError && !loading) ?\r\n            <div className=\"loading-txt\">You are not in any groups!</div>\r\n            : null\r\n          }{\r\n            axiosError ? <div className=\"loading-txt\">{axiosError}</div> : null\r\n          }\r\n          <div className=\"new-groups-div\"> </div>\r\n          <div className=\"group-div\">\r\n            <div className=\"group-add-btn\" onClick={this.openPopup.bind(this)}>\r\n              <div className=\"group-add-icon-container\">\r\n                <i className=\"fa fa-plus\"></i>\r\n                {this.state.showPopup ? \r\n                  <NewGroupPopup addGroup = {this.createGroup} closePopup={this.closePopup.bind(this)}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupsPage","/*\r\nThis is the group page from the USER prospective (as opposed to the admin's).\r\nThe user cannot delete users or messages. The admin can.\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header';\r\nimport OtherExpense from '../comps/OtherExpense';\r\nimport GroupMessage from '../comps/GroupMessage';\r\nimport Fetch from '../scripts/fetch.js';\r\nimport GroupMember from '../comps/GroupMember';\r\nimport OtherGroupComp from '../comps/OtherGroupComp';\r\nimport { uid } from 'react-uid';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Helper from '../scripts/helper.js';\r\nimport ExpensePopup from '../comps/ExpensePopup.js'\r\n\r\n/* This is the actual group page. the group page that has 3 columns*/\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      groupInput: \"\",\r\n      showPopup: false,\r\n      groupMemberAddInput: \"\",\r\n      addingMember: false\r\n    }\r\n    this.getInput = this.getInput.bind(this);\r\n    this.addMember = this.addMember.bind(this);\r\n    this.toggleAddUser = this.toggleAddUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const group = this.getGroup();\r\n    if (group !== undefined){\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether or not the expense popup is showing\r\n   */\r\n  togglePopup(){\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Scrolls to the bottom of the chat. Called when the component mounts.\r\n   */\r\n  scrollToBottomOfChat() {\r\n    const msgBox = document.querySelector(\".group-main-content\");\r\n    msgBox.scrollTop = msgBox.scrollHeight;\r\n  }\r\n\r\n  /**\r\n   * Return the group object that has this group number.\r\n   */\r\n  getGroup() {\r\n    const { group_number } = this.props.match.params;\r\n    const groups = Fetch.fetchGroups()\r\n    const thisGroupLst = groups.filter(g => g.id === parseInt(group_number))\r\n    return thisGroupLst[0]\r\n  }\r\n\r\n  /**\r\n   * Creates an new expense and adds it to the group timeline and sidebar.\r\n   * This method is passed on as a prop to the create new expense popup.\r\n   * Would need a server call to update our database with the new expense.\r\n   */\r\n  createExpense = (expense) => {\r\n    const newMsg = document.createElement(\"div\")\r\n    newMsg.id = expense.id\r\n    document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n    ReactDOM.render(<GroupMessage msg={expense} key={expense.id} update={this.updateSmallExpense} admin={false} hideExpense={this.hideSmallExpense}/>, document.querySelector(\"#\" + expense.id))\r\n    this.scrollToBottomOfChat();\r\n\r\n    // Create the small expense in the sidebar.\r\n    const newSmallExpense = (\r\n      <div key={uid(expense)} onClick={(e) => this.scrollToExpense(e, expense)}>\r\n        <OtherExpense msg={expense} />\r\n      </div>\r\n    )\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = uid(expense);\r\n    document.querySelector(\".group-col-other-ul\").appendChild(newDiv);\r\n    ReactDOM.render(newSmallExpense, document.querySelector(\".\" + uid(expense)));\r\n    \r\n  }\r\n\r\n  /**\r\n   * Creates a new chat message and adds it to the group timeline based on the chat input field.\r\n   * Would need a server call to update our database with the new chat, as well as obtain the current logged in user.\r\n   */\r\n  getInput(e) {\r\n    const val = this.state.groupInput;\r\n    if ((e.keyCode === 13 || e.target === document.querySelector(\".group-main-send-btn\") || e.target === document.querySelector(\".fa-paper-plane\")) && val !== \"\") {\r\n\r\n      //Here we would need to get the current user object from a server. for now, just use this dummy user.\r\n      const m = {\r\n        \"id\": 123,\r\n        \"groupId\": this.getGroup().id,\r\n        \"date\": (new Date()).getTime() / 1000,\r\n        \"type\": \"msg\",\r\n        \"user\":\r\n        {\r\n          \"id\": 1,\r\n          \"username\": \"user\",\r\n          \"password\": \"user\",\r\n          \"picUrl\": \"https://api.adorable.io/avatars/200/1\",\r\n          \"email\": \"dummy@dummy.com\",\r\n          \"firstName\": \"Firstname\",\r\n          \"lastName\": \"McLastname\"\r\n        },\r\n        \"content\": val\r\n      }\r\n      m.id = uid(m);\r\n      const newMsg = document.createElement(\"div\")\r\n      newMsg.id = m.id\r\n      document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n      \r\n      ReactDOM.render(<GroupMessage msg={m} key={m.id} admin={false} />, document.querySelector(\"#\" + m.id))\r\n\r\n      //Reset the state, and make textbox empty\r\n      document.querySelector(\"#group-input\").value = \"\"\r\n      this.setState({\r\n        \"groupInput\": \"\"\r\n      })\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new user to the group's member list.\r\n   * Would need a server call to update the group's new member in our database.\r\n   */\r\n  addMember(e){\r\n    if (e.target.id === \"group-add-member-accept-btn\" || e.keyCode === 13){\r\n      const users = Fetch.fetchUsers();\r\n      const usersFiltered = users.filter( u => u.username === this.state.groupMemberAddInput);\r\n      if (usersFiltered.length === 0){\r\n        alert(\"no user by that username\")\r\n        return;\r\n      }\r\n      const groupMembers = this.getGroup().members;\r\n      const usersInGroupWithSameUsername = groupMembers.filter( m => m.username === this.state.groupMemberAddInput);\r\n      if (usersInGroupWithSameUsername.length !== 0){\r\n        alert(\"that user is already in this group!\");\r\n        return;\r\n      }\r\n      else {\r\n        //We dont check if you add the same member twice (altho this doesnt work anyways), \r\n        //here we would have to update this group.members list (but we cant cuz its in json)\r\n        const newDiv = document.createElement(\"div\");\r\n        const newDivClass = String(uid(usersFiltered[0]));\r\n        newDiv.className =  newDivClass;\r\n        document.querySelector(\".group-generated-members\").appendChild(newDiv);\r\n        ReactDOM.render(<GroupMember member={usersFiltered[0]} admin={false}/>, document.querySelector(\".\"+newDivClass));\r\n        document.querySelector(\"#group-add-member-input\").value = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether the add new user input field is displayed.\r\n   */\r\n  toggleAddUser(){\r\n    const addUserInput = document.querySelector(\".group-add-member-input-container\");\r\n    const addMemberCntr = document.querySelector(\".group-add-member-container\");\r\n    if (!this.state.addingMember){\r\n      addUserInput.style.display = \"block\";\r\n      addMemberCntr.style.display = \"none\";\r\n    }\r\n    else {\r\n      addUserInput.style.display = \"none\";\r\n      addMemberCntr.style.display = \"block\";\r\n    }\r\n    this.setState({\r\n      addingMember: !this.state.addingMember\r\n    });\r\n    \r\n  }\r\n\r\n  /**\r\n   * Scrolls to the msg in question. Called when you click on the expense in the \r\n   * sidebar.\r\n   */\r\n  scrollToExpense(event, msg){\r\n    const elem = document.querySelector(\"#group-main-profile-pic-id-\" + msg.id);\r\n    elem.scrollIntoView();\r\n  }\r\n\r\n  /**\r\n   * Updates the expense in the sidebar.\r\n   */\r\n  updateSmallExpense(id, amount){\r\n    const txt = document.querySelector(\".expense-small-id-\" + id + \" p\");\r\n    txt.innerText = `$${amount} remaining`;\r\n  }\r\n\r\n  /**\r\n   * Hides the expense in the sidebar. Called when an expense is finished paying.\r\n   */\r\n  hideSmallExpense(id){\r\n    document.querySelector(\".expense-small-id-\" + id).style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    const group = this.getGroup()\r\n    const groups = Fetch.fetchGroups()\r\n    const msgs = Fetch.fetchGroupMsgs()\r\n\r\n    //No group exists with this id. redirect to 404 page.\r\n    if (group === undefined) {\r\n      return <Redirect to='/404' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header user=\"user\"/>\r\n        <div className=\"group-container\">\r\n          <div className=\"group-col group-members-col\">\r\n            <div className=\"group-members-div\">\r\n              <div className=\"group-generated-members\">\r\n              {\r\n                group.members.map(member => {\r\n                  return (\r\n                    <GroupMember member={member} key={uid(member)} admin={false} />\r\n                  )\r\n                })\r\n              }\r\n              </div>\r\n              <div className=\"group-add-member-container\">\r\n                <div className=\"group-add-member-inner\" onClick={this.toggleAddUser}>\r\n                  <div className=\"group-add-member-btn\" >\r\n                    <i className=\"fa fa-plus\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"group-add-member-input-container\">\r\n                \r\n                <input id=\"group-add-member-input\" type=\"text\" name=\"groupMemberAddInput\" placeholder=\"Enter Username\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.addMember}></input>\r\n                \r\n                <i className=\"fa fa-check\" id=\"group-add-member-accept-btn\" onClick={this.addMember}></i>\r\n                <div className=\"group-add-member-cancel-btn\" onClick={this.toggleAddUser}> Cancel </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"group-col group-main-col\">\r\n            <div>\r\n              <div className=\"group-title\">\r\n                {group.name}\r\n              </div>\r\n\r\n              <div className=\"group-main-add-btn\">\r\n                <button onClick={this.togglePopup.bind(this)}> <i className=\"fa fa-plus\"></i> New Expense</button>\r\n                {this.state.showPopup ? \r\n                  <ExpensePopup addExpense = {this.createExpense} closePopup={this.togglePopup.bind(this)} group={group}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"group-main-content\">\r\n              {\r\n                msgs.filter(m => m.groupId === group.id).map(msg => {\r\n                  return (\r\n                    <GroupMessage msg={msg} key={uid(msg)} update={this.updateSmallExpense} hideExpense={this.hideSmallExpense} admin={false}/>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n            <div className=\"group-input-container\">\r\n              <input id=\"group-input\" type=\"text\" name=\"groupInput\" placeholder=\"Type something...\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.getInput}></input>\r\n              <div className=\"group-main-send-btn\" onClick={this.getInput}><i className=\"fa fa-paper-plane\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"group-col group-other-col\">\r\n            <div className=\"other-title-expenses\">\r\n              <div className=\"other-title\">\r\n                <h3>Current Expenses</h3>\r\n              </div>\r\n              <ul className=\"group-col-other-ul\">\r\n                {\r\n                  msgs.filter(m => m.groupId === group.id && m.type === \"expense\").map(msg => {\r\n                    return (\r\n                      <div key={uid(msg)} onClick={(e) => this.scrollToExpense(e, msg)}>\r\n                        <OtherExpense msg={msg} />\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n            <div className=\"other-title\">\r\n              <h3>Other Groups</h3>\r\n            </div>\r\n            <ul className=\"group-col-other-ul\">\r\n              {\r\n                /* Get all groups but current one*/\r\n                groups.filter(g => g.id !== group.id).map(g => {\r\n                  return (\r\n                    <OtherGroupComp group={g} key={uid(g)} />\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group","/**\r\n * This is the profile view from the USERS perpsective  (as opposed to the admin's)\r\n * The admin can edit fields. The user cannot.\r\n */\r\n\r\n\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Header from '../comps/Header'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport '../style/Profile.css'\r\n\r\nclass Profile extends React.Component{\r\n    \r\n    state = {\r\n        user: undefined,\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        avatar: \"\",\r\n        description: \"\",\r\n        email: \"\", \r\n        pref: \"\",\r\n        paypal: \"\",\r\n        editing: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.getUser()\r\n        if (user){\r\n            this.setState({\r\n                firstname: user.firstName,\r\n                lastname: user.lastName,\r\n                avatar: user.picUrl,\r\n                description: user.description,  \r\n                email: user.email, \r\n                pref: user.preference,\r\n                paypal: user.paypal,\r\n                user: user\r\n            });\r\n            const pic = document.querySelector(\"#profile-pic-\" + user.id);\r\n            pic.style.backgroundImage = \"url('\" + user.picUrl + \"')\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the id number of this user.\r\n     */\r\n    getUserNum(){\r\n        const {user_number} = this.props.match.params\r\n        return user_number\r\n    }\r\n\r\n    /**\r\n     * Get the object representing this user\r\n     */\r\n    getUser(){\r\n        const userNumber = this.getUserNum();\r\n        const userList = Fetch.fetchUsers();\r\n        return userList.filter(user => user.id === parseInt(userNumber))[0];\r\n    }\r\n\r\n    render() {\r\n        const user = this.getUser();\r\n        if (user === undefined){\r\n            return <Redirect to='/404'/>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Header user=\"user\"/>\r\n                \r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile-pic-and-name\">\r\n                        <div className=\"profile-pic\" id={\"profile-pic-\" + user.id}>\r\n                        </div>\r\n                        <div className=\"profile-name-container\">\r\n                            <h1>{user.username} <a href={this.state.paypal} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-cc-paypal\"></i></a></h1> \r\n                            {this.state.firstname} {this.state.lastname}\r\n                        </div>\r\n                        <div className=\"profile-desc\">\r\n                            <b>Description</b> \r\n                            <p>{this.state.description}</p>\r\n                            <br/>\r\n                            <b>Preferred Payment Method</b>\r\n                            <p>{this.state.pref}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-info-container\">\r\n                        <h3>Email</h3>\r\n                        <p>{this.state.email}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile ","import React from 'react';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\nimport './style/App.css';\r\nimport './style/Landing.css';\r\nimport './style/Login.css';\r\nimport './style/Group.css';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport './style/NewGroup.css';\r\n\r\n\r\nimport GroupsPage from './pages/GroupsPage';\r\nimport LandingPage from './pages/LandingPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport Group from './pages/Group';\r\nimport Profile from './pages/Profile';\r\nimport NoMatch from './pages/NoMatch';\r\n\r\n\r\n//Dummy components specifically for user, instead of admin.\r\nimport USERGroupsPage from './pages/USERGroupsPage';\r\nimport USERGroup from './pages/USERGroup';\r\nimport USERProfile from './pages/USERProfile';\r\n\r\n/*\r\nTODO:\r\n*******************\r\nGROUP\r\nClick on user -> Little popup with link to profile, discord style\r\n\r\n*******************\r\nEXPENSES\r\nVariable/uneven debts\r\n*******************\r\nADMIN FUNCTIONALITY (*)\r\nDifferent views for admin and user (admin can see remove and edit options)\r\n*******************\r\nUSER PAGE\r\nSee joined groups\r\nSee owed debts\r\nSee user debts\r\n*******************\r\nSome sort of ping system\r\ndo the README\r\n*/\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path='/' component={LandingPage} />\r\n            <Route exact path='/groups' component={USERGroupsPage} />\r\n            <Route exact path='/login' component={LoginPage} />\r\n            <Route exact path='/register' component={RegisterPage} />\r\n            <Route exact path='/g/:group_number' component={USERGroup} />\r\n            <Route exact path='/u/:user_number' component={USERProfile} />\r\n\r\n            <Route exact path='/u/:user_number/admin' component={Profile} />\r\n            <Route exact path='/groups/admin' component={GroupsPage} />\r\n            <Route exact path='/g/:group_number/admin' component={Group} />\r\n\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}