{"version":3,"sources":["comps/Header.js","scripts/helper.js","comps/GroupComp.js","scripts/fetch.js","comps/NewGroupMemberRow.js","comps/GroupIcon.js","comps/NewGroupPopup.js","pages/GroupsPage.js","comps/Footer.js","pages/LandingPage.js","comps/LoginHeader.js","pages/RegisterPage.js","pages/LoginPage.js","comps/OtherExpense.js","comps/ExpensePic.js","comps/GroupMessage.js","comps/GroupMember.js","comps/OtherGroupComp.js","comps/ExpensePopup.js","pages/Group.js","pages/Profile.js","pages/NoMatch.js","pages/USERGroupsPage.js","pages/USERGroup.js","pages/USERProfile.js","App.js","serviceWorker.js","index.js"],"names":["Header","this","props","user","document","querySelector","style","display","href","innerText","className","id","React","Component","Helper","handleInputChange","event","target","value","name","setState","Color","require","GroupComp","state","hover","editHover","deleteHover","hoverOn","bind","hoverOff","hide","edit","confirm","redirect","icon","backgroundColor","colorBg","admin","isDark","color","membersList","length","r","i","username","substring","div","lighten","hsl","string","darken","e","classList","contains","window","location","input","onMouseEnter","onMouseLeave","onClick","type","defaultValue","onChange","stringifyMembers","members","Fetch","fetchGroups","dummy_group_list","fetchUsers","dummy_user_list","fetchGroupMsgs","dummy_group_msgs","NewGroupMemberRow","num","users","groupId","filter","g","val","valid","u","validator","placeholder","maxLength","checkValid","newRow","GroupIcon","iconName","AColorPicker","NewGroupPopup","title","groupIcon","groupMembers","groupColor","pickerOpen","selectColorTxt","iconLst","undefined","numMembers","selectColor","getMembers","from","on","picker","String","preventDefault","usernameInputs","querySelectorAll","memberLst","added","result","m","includes","push","curIcon","closeFunction","allGroups","newGroup","addGroup","console","log","xhr","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","closePopup","alert","newDiv","createElement","appendChild","ReactDOM","render","acp-show-hex","acp-show-rgb","acp-show-hsl","acp-palette","map","selectIcon","key","uid","createGroup","close","GroupsPage","groups","group","showPopup","openPopup","LandingPage","script","src","async","body","Footer","LoginHeader","regex","RegExp","RegisterPage","password","rePassword","keyCode","test","checkRegistered","action","method","required","onKeyDown","register","LoginPage","login","OtherExpense","msg","backgroundImage","picUrl","expense","Number","remaining","toFixed","ExpensePic","member","paid","GroupMessage","currentUserId","currentlyPaying","payAmount","expenseRemaining","youOwe","toggleExpense","handleInput","deductPayment","delete","cost","amount","rounded","parseFloat","Math","round","closebtn","container","hideExpense","youOweNewAmt","update","UNIX_timestamp","a","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","getSeconds","timeConverter","date","content","min","max","step","getMsg","getExpense","GroupMember","clickEvent","OtherGroupComp","ExpensePopup","expenseTitle","expenseContent","expenseCost","expenseMembers","createExpense","getTime","addExpense","createNewMemberRow","costInputField","onPointerDown","onBlur","formatCost","Group","newMsg","updateSmallExpense","hideSmallExpense","scrollToBottomOfChat","newSmallExpense","scrollToExpense","groupInput","groupMemberAddInput","addingMember","getInput","addMember","toggleAddUser","getGroup","msgBox","scrollTop","scrollHeight","group_number","match","params","parseInt","usersFiltered","newDivClass","addUserInput","addMemberCntr","scrollIntoView","msgs","to","togglePopup","Profile","firstname","lastname","avatar","description","email","pref","paypal","editing","toggleEdit","getUser","firstName","lastName","preference","user_number","userNumber","getUserNum","rel","NoMatch","role","aria-label","axios","get","then","response","catch","err","Fragment","App","exact","path","component","USERGroupsPage","USERGroup","USERProfile","Boolean","hostname","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ea4a2ad.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n  componentDidMount(){\r\n    if (this.props.user === \"admin\"){\r\n      document.querySelector(\"#header-login\").style.display = \"none\";\r\n      document.querySelector(\"#header-register\").style.display = \"none\";\r\n      document.querySelector(\"#header-profile\").href = \"/u/0/admin\";\r\n      document.querySelector(\".header-username\").innerText = \"Admin\";\r\n      document.querySelector(\"#header-group-link\").href = \"/groups/admin\";\r\n    } else if (this.props.user === \"user\"){\r\n      document.querySelector(\"#header-login\").style.display = \"none\";\r\n      document.querySelector(\"#header-register\").style.display = \"none\";\r\n      document.querySelector(\"#header-profile\").href = \"/u/1\";\r\n      document.querySelector(\".header-username\").innerText = \"User\";\r\n    } else {\r\n      //Else, nobody logged in.\r\n      document.querySelector(\"#header-profile\").style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"headerbox\">\r\n          <a href=\"/\">\r\n            <div className=\"header-logo\">\r\n            </div>\r\n          </a>\r\n          <ul className=\"header-left-ul\">\r\n            <a href=\"/\">\r\n              <li className=\"header-li\">\r\n                <div className=\"li-content\">\r\n                  Home <i className=\"fa fa-home\"></i>\r\n                </div>\r\n              </li>\r\n            </a>\r\n            <a href=\"/groups\" id=\"header-group-link\">\r\n              <li className=\"header-li\">\r\n                  <div className=\"li-content\">\r\n                    Groups <i className=\"fa fa-users\"></i>\r\n                  </div>\r\n              </li>\r\n            </a>\r\n          </ul>\r\n          {/* register and login buttons should be removed from header when a user logs in.\r\n            Will implement in phase 2 once we have server functionality that knows when a user is logged in*/}\r\n          <ul className=\"header-right-ul\" >\r\n            <a href=\"/register\" id=\"header-register\">\r\n              <li className=\"header-li\">\r\n                <div className=\"li-content\" >\r\n                  Register <i className=\"fa fa-user-plus\"></i>\r\n                </div>\r\n              </li>\r\n            </a>\r\n            <a href=\"/login\" id=\"header-login\">\r\n              <li className=\"header-li\">\r\n                <div className=\"li-content\" >\r\n                  Login <i className=\"fa fa-sign-in\"></i>\r\n                </div>\r\n              </li>\r\n            </a>\r\n            <a href=\"/u/1\" id=\"header-profile\"> \r\n            {/* currently hard-coded to go to the profile page of user id 1.\r\n            Will later have server call to link to the profile of a currently logged in user. */}\r\n              <li className=\"header-li\">\r\n                  <div className=\"li-content\">\r\n                    <span className=\"header-username\">Profile</span> <i className=\"fa fa-user\"></i>\r\n                  </div>\r\n              </li>\r\n            </a>\r\n            <a href=\"/logout\" id=\"header-logout\"> \r\n              <li className=\"header-li\">\r\n                  <div className=\"li-content\">\r\n                    <span className=\"header-username\">Logout</span> <i className=\"fa fa-sign-out\"></i>\r\n                  </div>\r\n              </li>\r\n            </a>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","/*\r\nUpdates the state of the \"this\" object. Called on some arbitrary event.\r\n*/\r\nconst Helper = {\r\n  /**\r\n   * Changes a state upon the changing of inputs\r\n   */\r\n  handleInputChange: function(event) {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n}\r\n\r\nexport { Helper as default }","import React from 'react'\r\nimport Helper from '../scripts/helper.js';\r\nconst Color = require('color');\r\n\r\n\r\n/* This is the group COMPONENT that is listed in the GroupPage*/\r\n\r\nclass GroupComp extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: this.props.name,\r\n      hover: false,\r\n      editHover: false,\r\n      deleteHover: false\r\n    };\r\n    this.hoverOn = this.hoverOn.bind(this);\r\n    this.hoverOff = this.hoverOff.bind(this);\r\n    this.hide = this.hide.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.confirm = this.confirm.bind(this);\r\n    this.redirect = this.redirect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const icon = document.querySelector(\"#icon\" + this.props.id);\r\n    icon.className = \"group-icon fa fa-\" + this.props.icon;\r\n    const group = document.querySelector(\".group-div-id-\" + this.props.id);\r\n    group.style.backgroundColor = this.props.colorBg;\r\n\r\n    const check = document.querySelector(\"#group-i-check-\" + this.props.id);\r\n    check.style.display = \"none\";\r\n\r\n    if (this.props.admin === false){\r\n      //in reality these buttons should be removed. this is ok for now.\r\n      document.querySelector(\"#group-i-edit-\" + this.props.id).style.display = \"none\";\r\n      document.querySelector(\"#group-i-trash-\" + this.props.id).style.display = \"none\";\r\n    }\r\n\r\n    if (Color(this.props.colorBg).isDark()){\r\n      document.querySelector(\".group-div-id-\" + this.props.id).style.color = \"white\";\r\n    } else {\r\n      document.querySelector(\".group-div-id-\" + this.props.id).style.color = \"black\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the member list as a string with each member separated by commas.\r\n   */\r\n  stringifyMembers(membersList) {\r\n    if (membersList.length === 0) {\r\n      return \"No members.\"\r\n    }\r\n    let r = \"\"\r\n    for (let i = 0; i < membersList.length; i++) {\r\n      r += membersList[i].username + \", \"\r\n    }\r\n    return r.substring(0, r.length - 2)\r\n  }\r\n\r\n  hoverOn(){\r\n    const div = document.querySelector(\".group-div-id-\" + this.props.id);\r\n    if (Color(this.props.colorBg).isDark()){\r\n      div.style.backgroundColor = Color(this.props.colorBg).lighten(1).hsl().string();\r\n    } else {\r\n      div.style.backgroundColor = Color(this.props.colorBg).darken(0.1).hsl().string();\r\n    }\r\n    this.setState(\r\n      {\r\n        hover: true\r\n      }\r\n    );\r\n  }\r\n\r\n  hoverOff(){\r\n    const div = document.querySelector(\".group-div-id-\" + this.props.id);\r\n    div.style.backgroundColor = this.props.colorBg;\r\n    this.setState(\r\n      {\r\n        hover: false\r\n      }\r\n    );\r\n  }\r\n\r\n  redirect(e){\r\n    if (!e.target.classList.contains(\"fa\") && !e.target.classList.contains(\"group-comp-input\")){\r\n      if (this.props.admin){\r\n        window.location = \"/g/\" + this.props.id + \"/admin\";\r\n      } else {\r\n        window.location = \"/g/\" + this.props.id;\r\n      } \r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hides a group in the groups page, called when a group is deleted.\r\n   * Will require a server call to remove the group from a database\r\n   */\r\n  hide(){\r\n    document.querySelector(\".group-div-id-\" + this.props.id).style.display = \"none\";\r\n  }\r\n\r\n  /**\r\n   * Allows the name of a group to be edited using an input field.\r\n   */\r\n  edit(){\r\n    const elem = document.querySelector(\"#group-name-id-\" + this.props.id);\r\n    elem.style.display = \"none\";\r\n    const input = document.querySelector(\"#group-comp-input-id-\" + this.props.id);\r\n    input.style.display = \"inline-block\";\r\n    const edit = document.querySelector(\"#group-i-edit-\" + this.props.id);\r\n    edit.style.display = \"none\";\r\n    const check = document.querySelector(\"#group-i-check-\" + this.props.id);\r\n    check.style.display = \"inline-block\";\r\n  }\r\n\r\n  /**\r\n   * Confirms whatever is in the group name input field to become the group's name.\r\n   * Will require a server call to actually change the group's name in our database.\r\n   */\r\n  confirm(){\r\n    const elem = document.querySelector(\"#group-name-id-\" + this.props.id);\r\n    elem.style.display = \"inline-block\";\r\n    const input = document.querySelector(\"#group-comp-input-id-\" + this.props.id);\r\n    input.style.display = \"none\";\r\n    this.setState({\r\n      name: input.value\r\n    });\r\n    const icon = document.querySelector(\"#group-i-edit-\" + this.props.id);\r\n    icon.style.display = \"inline-block\";\r\n    const check = document.querySelector(\"#group-i-check-\" + this.props.id);\r\n    check.style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className={\"group-div group-div-id-\" + this.props.id} onMouseEnter={this.hoverOn} onMouseLeave={this.hoverOff} onClick={this.redirect}>\r\n\r\n          <h1 className=\"grouppage-title\">\r\n            <i id={\"icon\" + this.props.id}></i> <span className=\"group-name\" id={\"group-name-id-\" + this.props.id}>{this.state.name}</span> <input className=\"group-comp-input\" id={\"group-comp-input-id-\" + this.props.id } type=\"text\" name=\"title\" defaultValue={this.state.name} onChange={Helper.handleInputChange.bind(this)}></input>\r\n          </h1>\r\n          <div className=\"group-div-change-btns\">\r\n            <div>\r\n              \r\n                <i className=\"fa fa-check\" id={\"group-i-check-\" + this.props.id} onClick={this.confirm}></i>\r\n              \r\n              <i className=\"fa fa-edit\" id={\"group-i-edit-\" + this.props.id} onClick={this.edit}></i>\r\n              <i className=\"fa fa-trash\" id={\"group-i-trash-\" + this.props.id} onClick={this.hide}></i>\r\n            </div>\r\n          </div>\r\n          <h3>\r\n            Members: {this.stringifyMembers(this.props.members)}\r\n          </h3>\r\n        </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default GroupComp","import dummy_user_list from '../data/dummy_user_list.json';\r\nimport dummy_group_list from '../data/dummy_group_list.json';\r\nimport dummy_group_msgs from '../data/dummy_group_msgs.json';\r\n\r\n\r\nconst Fetch = {\r\n  fetchGroups() {\r\n    //would require a server call to pull this information from our database\r\n    return dummy_group_list\r\n\r\n  },\r\n  \r\n  fetchUsers(){\r\n    //would require a server call to pull this information from our database\r\n    return dummy_user_list;\r\n  },\r\n  \r\n  fetchGroupMsgs() {\r\n    //would require a server call to pull this information from our database\r\n    return dummy_group_msgs;\r\n  },\r\n}\r\n\r\nexport {  Fetch as default }","import React from 'react'\r\nimport Fetch from '../scripts/fetch.js';\r\n\r\nclass NewGroupMemberRow extends React.Component {\r\n  /**\r\n   * Determines if a given group member row holds a valid member to be added.\r\n   * Changes the text display of the group member row showing if the member is valid or not.\r\n   * @param num the index of the new group member row\r\n   */\r\n  checkValid(num){\r\n    let users;\r\n    if (this.props.groupId !== -1){\r\n      const groupLst = Fetch.fetchGroups().filter( g => g.id === this.props.groupId);\r\n      const group = groupLst[0];\r\n      users = group.members;\r\n    } else {\r\n      users = Fetch.fetchUsers();\r\n    }\r\n    const val = document.querySelector(\"#groupMembersInput-\" + num).value;\r\n    const valid = users.filter( u => u.username === val).length !== 0;\r\n    const validator = document.querySelector(\".new-member-confirmation-\" + num);\r\n    //donald easter egg :)\r\n    if (val === \"donald\"){\r\n      validator.innerText = \"bruh...\";\r\n      validator.style.color = \"green\";\r\n      \r\n    }\r\n    else if (valid){\r\n      validator.innerText = \"valid\";\r\n      validator.style.color = \"green\";\r\n    } else if (val.length === 0){\r\n      validator.innerText = \"?\";\r\n      validator.style.color = \"black\";\r\n    } else {\r\n      validator.innerText = \"invalid\";\r\n      validator.style.color = \"red\";\r\n    }\r\n    \r\n  }\r\n  render() {\r\n    const num = this.props.num - 1;\r\n    return (\r\n        <div className={\"new-group-member-row new-group-member-row-\" + num}>\r\n          <p>Member {this.props.num}</p>\r\n          <input className=\"group-member-input-field\" id={\"groupMembersInput-\" + num} type=\"text\" name=\"groupMembers\" placeholder=\"Enter Username\" maxLength=\"20\" onChange={() => this.checkValid(num)}></input> \r\n          <div className={\"new-member-confirmation new-member-confirmation-\" + num}>?</div>\r\n          <span className=\"new-member-row-btn\" onClick={this.props.newRow}> New Row </span>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default NewGroupMemberRow","import React from 'react'\r\n\r\nclass GroupIcon extends React.Component{\r\n  render() {\r\n    return (\r\n      \r\n        <div className=\"icon-container\" id={\"icon-choice-\" + this.props.iconName}><i className={\"fa fa-\" + this.props.iconName} ></i>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupIcon","import React from 'react';\r\nimport '../style/NewGroupPopup.css';\r\nimport ReactDOM from 'react-dom';\r\nimport NewGroupMemberRow from '../comps/NewGroupMemberRow';\r\nimport GroupIcon from '../comps/GroupIcon';\r\nimport Fetch from '../scripts/fetch.js';\r\nimport { uid } from 'react-uid';\r\nimport Helper from '../scripts/helper.js';\r\nconst AColorPicker = require('a-color-picker');\r\n\r\nclass NewGroupPopup extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.selectColor = this.selectColor.bind(this);\r\n      this.newRow = this.newRow.bind(this);\r\n      this.getMembers = this.getMembers.bind(this);\r\n  }\r\n\r\n  state = {\r\n      users: Fetch.fetchUsers(),\r\n      title: \"\",\r\n      groupIcon: \"\",\r\n      groupMembers: \"\",\r\n      groupColor: \"#eee\",\r\n      pickerOpen: false,\r\n      selectColorTxt: \"Select Color\",\r\n      iconLst: [\"user\", \"user-secret\", \"user-md\", \"user-circle\", \"blind\", \"child\", \"male\", \"female\", \"wheelchair\", \"mouse-pointer\"],\r\n      icon: undefined,\r\n      numMembers: 1\r\n  }\r\n\r\n  componentDidMount() {\r\n      AColorPicker.from('.picker').on('change', (picker, color) => {\r\n        const colorPrev = document.querySelector(\".color-preview\");\r\n        colorPrev.style.backgroundColor = color;\r\n        this.setState({\r\n          groupColor: String(color)\r\n        });\r\n      }\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Picks a color from the color picker.\r\n   */\r\n  selectColor(e) {\r\n      e.preventDefault();\r\n      if (!this.state.pickerOpen) {\r\n        document.querySelector(\".picker\").style.display = \"block\";\r\n        this.setState({\r\n          pickerOpen: true,\r\n          selectColorTxt: \"Confirm Color\"\r\n        });\r\n      } else {\r\n        document.querySelector(\".picker\").style.display = \"none\";\r\n        this.setState({\r\n          pickerOpen: false,\r\n          selectColorTxt: \"Select Color\"\r\n        });\r\n      }\r\n  \r\n  }\r\n\r\n  /**\r\n   * Returns a list the members of a new group.\r\n   */\r\n  getMembers(){\r\n      const usernameInputs = document.querySelectorAll(\".group-member-input-field\");\r\n      const memberLst = this.state.users;\r\n      const numMembers = this.state.numMembers;\r\n      const added = [];\r\n      const result = [];\r\n      for (let i = 0; i < numMembers; i++){\r\n        const m = memberLst.filter( m => \r\n          m.username === usernameInputs[i].value\r\n        );\r\n        if (m.length === 0 || added.includes(m[0].id)){\r\n          continue;\r\n        }\r\n        result.push(m[0]);\r\n        added.push(m[0].id);\r\n      }\r\n      return result;\r\n  }\r\n\r\n  /**\r\n   * Selects the icon of a new group.\r\n   */\r\n  selectIcon(name) {\r\n      if (this.state.groupIcon !== \"\") {\r\n        const curIcon = this.state.groupIcon;\r\n        document.querySelector(\"#icon-choice-\" + curIcon).className = \"icon-container\";\r\n      }\r\n      this.setState({\r\n        groupIcon: name\r\n      });\r\n      document.querySelector(\"#icon-choice-\" + name).className = \"icon-container icon-selected\";\r\n  \r\n  }\r\n  \r\n  /**\r\n   * Closes the new group popup.\r\n   */\r\n  close(e, closeFunction){\r\n      if (e.target.className === \"popup-close-btn\"){\r\n      closeFunction();\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Creates a new group based on the input fields and adds it to the groups page.\r\n   */\r\n  createGroup() {\r\n    if (this.state.title === \"\" || this.state.groupIcon === \"\") {\r\n      alert(\"Please fill out all fields!\");\r\n      return;\r\n    }\r\n    const allGroups = Fetch.fetchGroups();\r\n    const newId = allGroups[allGroups.length - 1].id + 1;\r\n    const newGroup = {\r\n      id: newId,\r\n      name: this.state.title,\r\n      icon: this.state.groupIcon,\r\n      colorBg: this.state.groupColor,\r\n      members: this.getMembers()\r\n    }\r\n    this.props.addGroup(newGroup);\r\n\r\n    /* HTTP Request */\r\n    console.log(\"Making POST req\");\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", '/groups');\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    xhr.send(JSON.stringify(newGroup));\r\n    //Close\r\n    this.props.closePopup();\r\n\r\n\r\n    return;\r\n  }\r\n  \r\n  /**\r\n   * Creates a new group member row to add members to the new group.\r\n   */\r\n  newRow(){\r\n      const newDiv = document.createElement(\"div\")\r\n      newDiv.className = \"new-group-member-row-\" + this.state.numMembers;\r\n      document.querySelector(\".new-group-members-container\").appendChild(newDiv)\r\n      ReactDOM.render(<NewGroupMemberRow newRow={this.newRow} num={this.state.numMembers + 1} groupId={-1}/>, document.querySelector(\".new-group-member-row-\" + this.state.numMembers))\r\n      this.setState({\r\n        numMembers: this.state.numMembers + 1\r\n      });\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <div className='popup' id ='new_group_popup'>\r\n          <div className='popup_inner'>\r\n            <h1>Create New Group</h1>\r\n            <form className = \"new-group-form\">\r\n              <h3> Group Title </h3>\r\n              <input id=\"groupTitleInput\" type=\"text\" name=\"title\" placeholder=\"Title\" onChange={Helper.handleInputChange.bind(this)}></input>\r\n              <h3> Members </h3>\r\n              <div className=\"new-group-members-container\">\r\n                <NewGroupMemberRow newRow={this.newRow} num={1} groupId={-1}/>\r\n              </div>\r\n              <h3> Color <div className=\"color-preview\"></div> </h3>\r\n              <button onClick={this.selectColor}>\r\n                {this.state.selectColorTxt}\r\n              </button>\r\n              <div className=\"picker\"\r\n                acp-show-hex=\"no\"\r\n                acp-show-rgb=\"no\"\r\n                acp-show-hsl=\"no\"\r\n                acp-palette=\"PALETTE_MATERIAL_CHROME\"></div>\r\n\r\n              <h3> Icon </h3>\r\n              {\r\n                this.state.iconLst.map( icon => {\r\n                  return(\r\n                    <span onClick={() => this.selectIcon(icon)} key={uid(icon)} >\r\n                      <GroupIcon iconName={icon} />\r\n                    </span>\r\n                  );\r\n                })\r\n              }\r\n\r\n            </form>\r\n            <div className=\"popup-btn-container\">\r\n                <button className=\"popup-create-btn\" onClick={() => this.createGroup()}> Create Group <i className=\"fa fa-users\"></i></button>\r\n                <button className=\"popup-close-btn\" onClick={(e) => this.close(e, this.props.closePopup)}> Close</button>\r\n              </div>\r\n            \r\n            \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default NewGroupPopup;","/**\r\n * This is the Group Page, where you select which group you want to open.\r\n * This is the view from the admin's perspective (as opposed to the user's)\r\n * The admin can rename and delete groups. The user cannot.\r\n */\r\n\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header.js'\r\nimport GroupComp from '../comps/GroupComp.js'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport { uid } from 'react-uid'\r\nimport NewGroupPopup from '../comps/NewGroupPopup.js'\r\n\r\nclass GroupsPage extends React.Component {\r\n\r\n  groups = Fetch.fetchGroups();\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { showPopup: false };\r\n  }\r\n\r\n  /**\r\n   * Opens the new group popup.\r\n   */\r\n  openPopup() {\r\n    if(this.state.showPopup === false){\r\n      this.setState({\r\n        showPopup: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the new group popup.\r\n   */\r\n  closePopup() {\r\n    if(this.state.showPopup === true){\r\n      this.setState({\r\n        showPopup: false\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates an new group and adds it to the groups page.\r\n   * This method is passed on as a prop to the create new group popup.\r\n   * Would need a server call to update our database with the new group.\r\n   */\r\n  createGroup = (group) => {\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = \"new-group-\" + uid(group);\r\n    document.querySelector(\".new-groups-div\").appendChild(newDiv);\r\n    ReactDOM.render(<GroupComp key={ uid(group) }\r\n                          name={ group.name }\r\n                          icon={ group.icon }\r\n                          colorBg={ group.colorBg }\r\n                          id={ uid(group) }\r\n                          members={ group.members }\r\n                          admin={true}\r\n                      />, document.querySelector(\".new-group-\" + uid(group)));    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header user={\"admin\"}/>\r\n        <ul className=\"group-ul\">\r\n          {\r\n            this.groups.map( group => {\r\n              return (\r\n                  <GroupComp key={ uid(group) }\r\n                        name={ group.name }\r\n                        icon={ group.icon }\r\n                        colorBg={ group.colorBg }\r\n                        id={ group.id }\r\n                        members={ group.members }\r\n                        admin={true}\r\n                  />\r\n              )\r\n            })\r\n          }\r\n          <div className=\"new-groups-div\"> </div>\r\n          <div className=\"group-div\">\r\n            <div className=\"group-add-btn\" onClick={this.openPopup.bind(this)}>\r\n              <div className=\"group-add-icon-container\">\r\n                <i className=\"fa fa-plus\"></i>\r\n                {this.state.showPopup ? \r\n                  <NewGroupPopup addGroup = {this.createGroup} closePopup={this.closePopup.bind(this)}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupsPage","import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer-banner\">\r\n        Team 53, for CSC309 Fall 2019. Christopher Marcok, Lance Oribello, David Choi.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from '../comps/Header.js'\r\nimport Footer from '../comps/Footer.js'\r\n\r\nclass LandingPage extends React.Component {\r\n    componentDidMount () {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"./script/canvas.js\";\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n            <div>\r\n                <Header />\r\n                <div className = \"jumbotron\">\r\n                    <canvas id=\"canvas\"></canvas>\r\n                </div> \r\n                <div className = \"above-jumbo\" >\r\n                    <h1 className=\"landing-main-txt\">\r\n                    <span className = \"main-header\" > DoleOut </span> \r\n                    </h1> \r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","import React from 'react';\r\n\r\nclass LoginHeader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"login-hdr\">\r\n          <h1>\r\n            <span className = \"login-span\" > {this.props.title} </span> \r\n          </h1>\r\n        </div> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LoginHeader;","import React from 'react';\r\nimport Header from '../comps/Header.js'\r\nimport LoginHeader from '../comps/LoginHeader.js'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport Helper from '../scripts/helper.js';\r\n\r\nconst regex = RegExp('^([a-zA-Z0-9 _-]+)$');\r\n\r\nclass RegisterPage extends React.Component {\r\n\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    rePassword: \"\",\r\n    users: Fetch.fetchUsers()\r\n  }\r\n\r\n  /**\r\n   * Checks if the username is in the master user list.\r\n   */\r\n  checkRegistered(username){\r\n    const user = this.state.users.filter(user => user.username === username);\r\n    return user.length > 0;\r\n  }\r\n\r\n  /**\r\n   * Registers a new user if all the input fields are valid.\r\n   * Would need a server call to update our database with the new user.\r\n   */\r\n  register(e) {\r\n    //button or enter key\r\n    if (e.keyCode === 13 || e.target.className === \"register-btn\"){\r\n      if (this.state.username === \"\"){\r\n        alert(\"your username should have at least one character\")\r\n        e.preventDefault();\r\n      } \r\n      else if (!regex.test(this.state.username)) {\r\n        alert(\"your username should match /^([a-zA-Z0-9 _-]+)$/\")\r\n        e.preventDefault();\r\n      }\r\n      else if (this.state.password.length <= 6){\r\n        alert(\"your password should have more than 6 characters\")\r\n        e.preventDefault();\r\n      }\r\n      else if (this.state.password !== this.state.rePassword){\r\n        alert(\"the passwords don't match\")\r\n        e.preventDefault();\r\n      }\r\n      else if (this.checkRegistered(this.state.username)){\r\n        alert(this.state.username + \" is already registered\")\r\n        e.preventDefault();\r\n      }\r\n      else {\r\n        // Should redirect you to the profile you just made. for now just redirect to the default user's profile.\r\n        // const newUsers = this.state.users.push(this.makeNewUser(this.state.username, this.state.password))\r\n        // this.setState({\r\n        //   \"users\": newUsers\r\n        // });\r\n        // window.location = \"/u/1\";\r\n        console.log(\"success\");\r\n      }\r\n    }\r\n  }\r\n\r\n  makeNewUser(username, password){\r\n    return {\r\n      id: 123,\r\n      username: username,\r\n      password: password\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <div className=\"login-container\">\r\n          <div className=\"login-inner\">\r\n            <LoginHeader title=\"Register\"/>\r\n            <form className=\"login-form\" action=\"/register\" method=\"post\">\r\n              <h3>\r\n                Username\r\n              </h3>\r\n              <input id=\"register-username\" type=\"text\" required name=\"username\" placeholder=\"Username\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.register(e)}></input>\r\n              <h3>\r\n                Password\r\n              </h3>\r\n              <input id=\"register-password\" type=\"password\" required name=\"password\" placeholder=\"Password\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.register(e)}></input>\r\n              <h3>\r\n                Confirm Password\r\n              </h3>\r\n              <input id=\"register-repassword\" type=\"password\" required name=\"rePassword\" placeholder=\"Password\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.register(e)}></input>\r\n              <button className=\"register-btn\" type=\"submit\" onClick={(e) => {this.register(e)}}>Register <i className=\"fa fa-user-plus\"></i></button>  \r\n            </form>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RegisterPage;","import React from 'react';\r\nimport Header from '../comps/Header.js'\r\nimport LoginHeader from '../comps/LoginHeader'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport Helper from '../scripts/helper.js';\r\n\r\nclass LoginPage extends React.Component {\r\n  \r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    users: Fetch.fetchUsers()\r\n  }\r\n\r\n  login(e) {\r\n    if (e.keyCode === 13 || e.target.className === \"login-btn\"){\r\n      console.log(\"attempting to post...\")\r\n    } \r\n  }\r\n\r\n  getUserPassword(username){\r\n    const users = this.state.users\r\n    const user = users.filter(user => user.username === username)\r\n    return user[0].password\r\n  }\r\n\r\n  checkRegistered(username){\r\n    const users = this.state.users\r\n    const user = users.filter(user => user.username === username)\r\n    return user.length > 0\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n          <div className=\"login-container\">\r\n            <div className=\"login-inner\">\r\n            <LoginHeader title=\"Login\"/>\r\n              <form className=\"login-form\" action=\"/login\" method=\"post\">\r\n                <h3>\r\n                  Username\r\n                </h3>\r\n                <input id=\"login-username\" type=\"text\" name=\"username\" placeholder=\"Username\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.login(e)}></input>\r\n                <h3>\r\n                  Password\r\n                </h3>\r\n                <input id=\"login-password\" type=\"password\" name=\"password\" placeholder=\"Password\" onChange={Helper.handleInputChange.bind(this)} onKeyDown={(e) => this.login(e)}></input>\r\n                <button className=\"login-btn\" type=\"submit\" onClick={(e) => this.login(e)}>Login <i className=\"fa fa-sign-in\"></i></button>  \r\n              </form>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default LoginPage;","import React from 'react'\r\n\r\nclass OtherExpense extends React.Component{\r\n\r\n  componentDidMount(){\r\n    const pic = document.querySelector(\".expense-small-pic-id-\" + this.props.msg.user.id + \"-\" + this.props.msg.id);\r\n    pic.style.backgroundImage = \"url('\" + this.props.msg.user.picUrl + \"')\";\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n        <div className={\"expense-small expense-small-id-\" + this.props.msg.id}>\r\n          <div className=\"expense-small-pic-and-title\">\r\n            <div className={\"expense-small-pic expense-small-pic-id-\" + this.props.msg.user.id + \"-\" + this.props.msg.id }></div>\r\n            <b>{this.props.msg.expense.title}</b>\r\n          </div>\r\n          <p>${Number(this.props.msg.expense.remaining).toFixed(2)} remaining</p>\r\n        </div>\r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default OtherExpense","import React from 'react'\r\n\r\nclass ExpensePic extends React.Component{\r\n  \r\n  componentDidMount(){\r\n    const pic = document.querySelector(\".expense-pic-id-\" + this.props.member.id + \"-\" + this.props.id);\r\n    pic.style.backgroundImage = \"url('\" + this.props.member.picUrl + \"')\";\r\n    const picCover = document.querySelector(\".expense-pic-cover-id-\" + this.props.member.id + \"-\" + this.props.id);\r\n    picCover.style.display = this.props.member.paid ? \"block\" : \"none\";\r\n  }\r\n\r\n  /**\r\n   * Redirects you to the user's profile page.\r\n   */\r\n  redirect(){    \r\n    console.log(this.props.admin);\r\n    if (this.props.admin){\r\n      \r\n      window.location = \"/u/\" + this.props.member.id + \"/admin\";\r\n    } else {\r\n      window.location = \"/u/\" + this.props.member.id;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"expense-pic-small-container\">\r\n        <div className={\"expense-pic-cover expense-pic-cover-id-\" + this.props.member.id + \"-\" + this.props.id}>\r\n        </div>\r\n        <div className={\"expense-pic-small expense-pic-id-\" + this.props.member.id + \"-\" + this.props.id} onClick={() => this.redirect()}>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ExpensePic","import React from 'react'\r\nimport ExpensePic from '../comps/ExpensePic'\r\nimport { uid } from 'react-uid'\r\n\r\nclass GroupMessage extends React.Component {\r\n\r\n  /* \r\n  A group message represents either a chat message, or an expense in the chat.\r\n  */\r\n\r\n constructor(props) {\r\n  super(props)\r\n\r\n  this.state = {\r\n    //code below requires a server call to obtain the currently logged in user\r\n    //hard-coded to always use \"user\", the account with user id 1\r\n    currentUserId: 1,\r\n    currentlyPaying: false,\r\n    payAmount: \"0.01\",\r\n    expenseRemaining: (this.props.msg.type === \"expense\") ? Number(this.props.msg.expense.remaining).toFixed(2) : undefined,\r\n    youOwe: undefined\r\n  }\r\n  this.toggleExpense = this.toggleExpense.bind(this);\r\n  this.handleInput = this.handleInput.bind(this);\r\n  this.deductPayment = this.deductPayment.bind(this);\r\n  this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const pic = document.querySelector(\"#group-main-profile-pic-id-\" + this.props.msg.id);\r\n    pic.style.backgroundImage = \"url('\" + this.props.msg.user.picUrl + \"')\";\r\n    if (this.props.msg.type === \"expense\"){\r\n      this.setState({\r\n        youOwe: Number(Number(this.props.msg.expense.cost) / this.props.msg.expense.members.length).toFixed(2)\r\n      });\r\n      const members = this.props.msg.expense.members;\r\n      const filtered = members.filter( m => m.id === this.state.currentUserId);\r\n      if (filtered.length === 0 || this.props.msg.user.id === this.state.currentUserId){\r\n        //user shouldnt be able to pay this expense.\r\n        this.setState({\r\n          youOwe: Number(0).toFixed(2)\r\n        });\r\n        document.querySelector(\".you-owe-container-id-\" + this.props.msg.id).style.display = \"none\";\r\n        document.querySelector(\".expense-pay-btn\" + this.props.msg.id).style.display = \"none\";\r\n      }\r\n    }\r\n\r\n    if (this.props.admin === false){\r\n      document.querySelector(\".expense-delete-container-\" + this.props.msg.id).style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  redirect() {\r\n    if (this.props.admin){\r\n      window.location = \"/u/\" + this.props.msg.user.id + \"/admin\";\r\n    } else {\r\n      window.location = \"/u/\" + this.props.msg.user.id;\r\n    }\r\n    \r\n  }\r\n\r\n  /**\r\n   * Toggles whether or not the payment input element of an expense is displayed and editable.\r\n   */\r\n  toggleExpense(){\r\n    if (!this.state.currentlyPaying){\r\n      this.setState({\r\n        currentlyPaying: true\r\n      });\r\n      document.querySelector(\".expense-pay-btn\" + this.props.msg.id ).style.display = \"none\";\r\n      document.querySelector(\".expense-close-btn\" + this.props.msg.id ).style.display = \"block\";\r\n      document.querySelector(\".expense-payment-container\" + this.props.msg.id ).style.display = \"block\";\r\n    } else {\r\n      this.setState({\r\n        currentlyPaying: false\r\n      });\r\n      document.querySelector(\".expense-close-btn\" + this.props.msg.id ).style.display = \"none\";\r\n      document.querySelector(\".expense-pay-btn\" + this.props.msg.id ).style.display = \"block\";\r\n      document.querySelector(\".expense-payment-container\" + this.props.msg.id).style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  handleInput(){\r\n    this.setState(\r\n      {    \r\n        payAmount: document.querySelector(\"#paymentInput\" + this.props.msg.id).value\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Reduces the remaining cost of an expense depending on what a user inputs in the expense's payment input field.\r\n   * Will require a server call to edit an expense's information in our database.\r\n   */\r\n  deductPayment(){\r\n    if(Number(this.state.payAmount) < 0){\r\n      alert(\"Cannot pay a negative amount\");\r\n      return;\r\n    }\r\n    const amount = this.state.expenseRemaining - Number(this.state.payAmount)\r\n    let rounded = parseFloat(Math.round(amount * 100) / 100).toFixed(2);\r\n    if (rounded < 0.01){\r\n      rounded = Number(0).toFixed(2);\r\n      const closebtn = document.querySelector(\".expense-close-btn\" + this.props.msg.id);\r\n      const container = document.querySelector(\".expense-payment-container\" + this.props.msg.id);\r\n      closebtn.style.display = \"none\";\r\n      container.style.display = \"none\";\r\n      this.props.hideExpense(this.props.msg.id);\r\n      document.querySelector(\".expense-cover-\" + this.props.msg.id).style.display = \"block\";\r\n    }\r\n    let youOweNewAmt = Number(this.state.youOwe - Number(this.state.payAmount)).toFixed(2);\r\n    if (youOweNewAmt < 0){\r\n      youOweNewAmt = Number(0).toFixed(2);\r\n      alert(\"You paid more than required. The max amount has been paid instead.\")\r\n    }\r\n    this.setState({\r\n      expenseRemaining: rounded,\r\n      youOwe: youOweNewAmt\r\n    });\r\n    if (youOweNewAmt < 0.01){\r\n      document.querySelector(\".you-owe-txt-\" + this.props.msg.id).style.color = \"#00C853\";\r\n      document.querySelector(\".expense-pic-cover-id-\" + this.state.currentUserId + \"-\" + this.props.msg.expense.id).style.display = \"block\";\r\n    }\r\n    const update = this.props.update;\r\n    update(this.props.msg.id, rounded);\r\n  }\r\n\r\n  // taken from https://stackoverflow.com/questions/847185/convert-a-unix-timestamp-to-time-in-javascript\r\n  timeConverter(UNIX_timestamp){\r\n    const a = new Date(UNIX_timestamp * 1000);\r\n    const months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n    const year = a.getFullYear();\r\n    const month = months[a.getMonth()];\r\n    const date = a.getDate();\r\n    const hour = a.getHours();\r\n    const min = a.getMinutes();\r\n    const sec = a.getSeconds();\r\n    const time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + ':' + sec ;\r\n    return time;\r\n  }\r\n\r\n  /**\r\n   * Deletes a message from the group timeline.\r\n   * Will require a server call to delete the information from our database.\r\n   */\r\n  delete(){\r\n    document.querySelector(\".msg-id-\" + this.props.msg.id).style.display = \"none\";\r\n    if (this.props.msg.type === \"expense\"){\r\n      //removes the expense from the right sidebar\r\n      document.querySelector(\".expense-small-id-\" + this.props.msg.id).style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a new message element for the DOM.\r\n   */\r\n  getMsg() {\r\n    return (\r\n      <div className={\"msg-id-\" + this.props.msg.id}>\r\n        <div className=\"group-main-msg\">\r\n          <div className=\"group-main-msg-profile-pic\" id={\"group-main-profile-pic-id-\" + this.props.msg.id} onClick={() => this.redirect()}>\r\n          </div>\r\n          <div className={\"expense-delete-container expense-delete-container-\" + this.props.msg.id} onClick={this.delete}>\r\n            <i className=\"fa fa-trash\"></i>\r\n          </div>\r\n          <div className=\"group-main-msg-content\">\r\n            <strong>{this.props.msg.user.username}</strong> <span className=\"date-span\">{this.timeConverter(this.props.msg.date)}</span> <br />\r\n            {this.props.msg.content}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Returns a new expense element for the DOM.\r\n   */\r\n  getExpense() {\r\n    return (\r\n      <div className={\"msg-id-\" + this.props.msg.id}>\r\n        <div className=\"group-expense-msg-container\">\r\n          <div className=\"group-main-msg-profile-pic\" id={\"group-main-profile-pic-id-\" + this.props.msg.id} onClick={() => this.redirect()}>\r\n          </div>\r\n          <div className={\"expense-delete-container expense-delete-container-\" + this.props.msg.id} onClick={this.delete}>\r\n            <i className=\"fa fa-trash\"></i>\r\n          </div>\r\n          <b>{this.props.msg.user.username}</b> created a new expense for ${this.props.msg.expense.cost}: <span className=\"date-span\">{this.timeConverter(this.props.msg.date)}</span>\r\n          <div className=\"group-main-msg-content\">\r\n            <div className=\"expense-container\">\r\n              <div className={\"expense-cover expense-cover-\" + this.props.msg.id}>\r\n              </div>\r\n              <div className=\"expense-upper\">\r\n                <div className=\"expense-upper-left\">\r\n                  <h3>{this.props.msg.expense.title}</h3>\r\n                  <p><i>\"{this.props.msg.content}\"</i></p>\r\n                  <div className={\"you-owe-container-id-\" + this.props.msg.id}>\r\n                    <p className=\"you-owe-title\">You Owe:</p>\r\n                    <p className={\"you-owe-txt you-owe-txt-\" + this.props.msg.id}>${this.state.youOwe}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"expense-upper-right\">\r\n                  <div className=\"expense-total-remaining-title\">\r\n                    Total Remaining:\r\n                  </div>\r\n                  <div className={\"expense-remaining expense-remaining-\" + this.props.msg.id}>\r\n                    ${this.state.expenseRemaining}\r\n                  </div>\r\n\r\n                </div>\r\n              </div>\r\n              <div className=\"expense-lower\">\r\n                <div className=\"expense-faces\">\r\n                  {\r\n                    this.props.msg.expense.members.map(m => {\r\n                      return (\r\n                        <ExpensePic key={uid(m)} member={m} id={this.props.msg.expense.id} admin={this.props.admin}/>\r\n                      );\r\n                    })\r\n                  }\r\n                </div>\r\n                <div className=\"expense-pay\">\r\n                <div className={\"expense-pay-btn expense-pay-btn\" + this.props.msg.id} onClick={this.toggleExpense}>\r\n                    PAY\r\n                  </div>\r\n                  <div className={\"expense-close-btn expense-close-btn\" + this.props.msg.id} onClick={this.toggleExpense}>\r\n                    CLOSE\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={\"expense-payment-container expense-payment-container\" + this.props.msg.id }>\r\n              <h3>How much would you like to pay?</h3>\r\n              <input id={\"paymentInput\"+this.props.msg.id} type=\"number\" min=\"0.01\" max={String(this.props.msg.expense.remaining)} step=\"0.01\" defaultValue=\"0.01\" onChange={this.handleInput} />\r\n              <i className=\"fa fa-check\" id=\"expense-make-payment-btn\" onClick={this.deductPayment}></i>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    if (this.props.msg.type === \"msg\") {\r\n      return this.getMsg();\r\n    } else if (this.props.msg.type === \"expense\") {\r\n      return this.getExpense();\r\n    }\r\n  }\r\n}\r\n\r\nexport default GroupMessage","import React from 'react'\r\n\r\nclass GroupMember extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.clickEvent = this.clickEvent.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    const pic = document.querySelector(\"#groupmember-pic-\" + this.props.member.id)\r\n    pic.style.backgroundImage = \"url('\" + this.props.member.picUrl + \"')\"\r\n    if (this.props.admin === false){\r\n      document.querySelector(\".groupmember-delete-\" + this.props.member.id).style.display = \"none\";\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Redirects to a group member's profile page.\r\n   */\r\n  clickEvent(e){\r\n    const classLst = e.target.classList;\r\n    if (!classLst.contains(\"groupmember-delete\") && e.target.className !== \"fa fa-trash\"){\r\n      if (this.props.admin === true){\r\n        window.location.href = \"/u/\" + this.props.member.id + \"/admin\";\r\n      }\r\n      else {\r\n        window.location.href = \"/u/\" + this.props.member.id;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hides a group member, called when a member is deleted.\r\n   * Will require a server call to remove the member from a database\r\n   */\r\n  delete(){\r\n    document.querySelector(\".groupmember-id-\" + this.props.member.id).style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div onClick={ this.clickEvent }>\r\n        <div className={\"groupmember groupmember-id-\" + this.props.member.id}>\r\n          <div className={\"groupmember-pic\"} id={ \"groupmember-pic-\" + this.props.member.id }>\r\n          </div>\r\n          <h3 className=\"groupmember-name\">\r\n            {this.props.member.username}\r\n            </h3>\r\n          <div className={\"groupmember-delete groupmember-delete-\" + this.props.member.id} onClick={this.delete}><i className=\"fa fa-trash\"></i></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupMember","import React from 'react'\r\n\r\nclass OtherGroupComp extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.redirect = this.redirect.bind(this);\r\n  }\r\n\r\n  redirect(){\r\n    if (this.props.admin === true){\r\n      window.location = \"/g/\" +  this.props.group.id + \"/admin\";\r\n    } else {\r\n      window.location = \"/g/\" +  this.props.group.id;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (    \r\n      <div className=\"other-group-container\" onClick={this.redirect}>\r\n        {this.props.group.name}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OtherGroupComp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport NewGroupMemberRow from '../comps/NewGroupMemberRow';\r\nimport '../style/ExpensePopup.css';\r\nimport { uid } from 'react-uid';\r\nimport Helper from  '../scripts/helper.js';\r\n\r\nclass ExpensePopup extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.createNewMemberRow = this.createNewMemberRow.bind(this)\r\n  }\r\n\r\n  state = {\r\n    expenseTitle: \"\",\r\n    expenseContent: \"\",\r\n    expenseCost: \"\",\r\n    expenseMembers: \"\",\r\n    numMembers: 1\r\n  }\r\n\r\n  /**\r\n   * Creates a new expense based on the input fields and adds it to the group timeline.\r\n   */\r\n  createExpense = () => {\r\n    if (this.state.expenseTitle === \"\" || this.state.expenseCost === \"\" || this.state.expenseContent === \"\" || this.getMembers().length === 1){\r\n      alert(\"one or more fields is missing!\");\r\n      return;\r\n    }\r\n\r\n    if(this.state.expenseCost <= 0){\r\n      alert(\"please enter a positive cost\");\r\n      return;\r\n    }\r\n    const m = {\r\n      \"id\": 8,\r\n      \"groupId\": 0,\r\n      \"date\": (new Date()).getTime() / 1000,\r\n      \"type\": \"expense\",\r\n      \"expense\": {\r\n        \"id\": 0,\r\n        \"title\": this.state.expenseTitle,\r\n        \"cost\": Number(this.state.expenseCost).toFixed(2),\r\n        \"remaining\": Number(this.state.expenseCost).toFixed(2) - (this.state.expenseCost / this.getMembers().length),\r\n        \"members\": this.getMembers()\r\n      },\r\n      //code below requires a server call to obtain the currently logged in user\r\n      //hard-coded to always assume \"user\" created the expense\r\n      \"user\": {\r\n        \"id\": 1,\r\n        \"username\": \"user\",\r\n        \"password\": \"123\",\r\n        \"picUrl\": \"https://api.adorable.io/avatars/200/1\",\r\n        \"email\": \"dummy@dummy.com\",\r\n        \"firstName\": \"Firstname\",\r\n        \"lastName\": \"McLastname\",\r\n        \"paypal\": \"https://www.paypal.me/chrismarcok\",\r\n        \"preference\": \"paypal\",\r\n        \"description\": \"send me money please thank u :)\"\r\n      },\r\n      \"content\": this.state.expenseContent\r\n    }\r\n    if (this.props.admin === true){\r\n      m.user.id = 0;\r\n      m.user.username = \"admin\";\r\n      m.user.picUrl = \"https://api.adorable.io/avatars/200/0\";\r\n    }\r\n    m.id = uid(m);\r\n    m.expense.id = uid(m);\r\n\r\n    this.props.addExpense(m);\r\n    this.props.closePopup();\r\n  }\r\n\r\n  /**\r\n   * Returns an array of all the members of an expense.\r\n   */\r\n  getMembers(){\r\n    const usernameInputs = document.querySelectorAll(\".group-member-input-field\");\r\n    const memberLst = this.props.group.members;\r\n    const numMembers = this.state.numMembers;\r\n    const added = [];\r\n    //code below requires a server call to obtain the currently logged in user to add the new expense's member list\r\n    //hard-coded to always add \"user\" to the member list\r\n    const result = [{\r\n      \"id\": 1,\r\n      \"username\": \"user\",\r\n      \"password\": \"123\",\r\n      \"picUrl\": \"https://api.adorable.io/avatars/200/1\",\r\n      \"email\": \"dummy@dummy.com\",\r\n      \"firstName\": \"Firstname\",\r\n      \"lastName\": \"McLastname\",\r\n      \"paypal\": \"https://www.paypal.me/chrismarcok\",\r\n      \"preference\": \"paypal\",\r\n      \"description\": \"send me money please thank u :)\",\r\n      \"paid\": true\r\n    }];\r\n    if (this.props.admin === true){\r\n      result[0].id = 0;\r\n      result[0].username = \"admin\";\r\n      result[0].picUrl = \"https://api.adorable.io/avatars/200/0\";\r\n    }\r\n    for (let i = 0; i < numMembers; i++){\r\n      const m = memberLst.filter( m => \r\n        m.username === usernameInputs[i].value\r\n      );\r\n\r\n      if (m.length === 0 || added.includes(m[0].id)){\r\n        continue;\r\n      }\r\n      result.push(m[0]);\r\n      added.push(m[0].id);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Formats the cost input of the expense to include decimals.\r\n   */\r\n  formatCost(){\r\n    const costInputField = document.querySelector(\"#expenseCostInput\");\r\n    const val = document.querySelector(\"#expenseCostInput\").value;\r\n    costInputField.value = Number(val).toFixed(2);\r\n    if (Number(val) < 0){\r\n      costInputField.value = Number(0).toFixed(2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the expense popup.\r\n   */\r\n  close(e, closeFunction){\r\n    if (e.target.className === \"popup\" || e.target.className === \"popup-close-btn\"){\r\n      closeFunction();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new member row to the expense popup.\r\n   */\r\n  createNewMemberRow(){\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = \"new-member-expense-popup-id-\" + this.state.numMembers;\r\n    document.querySelector(\".newGroupMemberRow-spawn-here\").appendChild(newDiv);\r\n    ReactDOM.render(<NewGroupMemberRow newRow={this.createNewMemberRow} num={( this.state.numMembers + 1)} groupId={this.props.group.id}/>, document.querySelector(\".new-member-expense-popup-id-\" + this.state.numMembers));\r\n    this.setState({\r\n      numMembers: this.state.numMembers + 1\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='popup' onPointerDown={(e) => this.close(e, this.props.closePopup)}>\r\n        <div className='popup_inner'>\r\n          <h1>New Expense</h1>\r\n          <form className=\"new-expense-form\">\r\n              <h3>\r\n                Expense Title\r\n              </h3>\r\n              <input className=\"new-expense-form-input\" id=\"expenseTitleInput\" type=\"text\" name=\"expenseTitle\" placeholder=\"Title\" onChange={Helper.handleInputChange.bind(this)}></input>\r\n              <h3>\r\n                Content \r\n              </h3>\r\n              <input className=\"new-expense-form-input\" id=\"expenseContentInput\" type=\"text\" name=\"expenseContent\" placeholder=\"A Message About Your Expense\" onChange={Helper.handleInputChange.bind(this)}></input>\r\n              <h3>\r\n                Cost \r\n              </h3>\r\n              <input className=\"new-expense-form-input\" id=\"expenseCostInput\" type=\"number\" name=\"expenseCost\" placeholder=\"Ex. '9.99'\" min=\"0\" onChange={Helper.handleInputChange.bind(this)} onBlur={this.formatCost}></input>\r\n              <h3>\r\n                Members\r\n              </h3>\r\n              <NewGroupMemberRow num={1} newRow={this.createNewMemberRow} groupId={this.props.group.id}/>\r\n              <div className=\"newGroupMemberRow-spawn-here\">\r\n              </div>\r\n            </form>\r\n          <div className=\"popup-btn-container\">\r\n            <button className=\"popup-create-btn\" onClick={() => this.createExpense()}> Create Expense </button>\r\n            <button className=\"popup-close-btn\" onClick={(e) => this.close(e, this.props.closePopup)}> Close</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpensePopup;","/**\r\n * This is the group page from the ADMIN perspective (as opposed to the user's).\r\n *  The user cannot delete users or messages. The admin can.\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header';\r\nimport OtherExpense from '../comps/OtherExpense';\r\nimport GroupMessage from '../comps/GroupMessage';\r\nimport Fetch from '../scripts/fetch.js';\r\nimport GroupMember from '../comps/GroupMember';\r\nimport OtherGroupComp from '../comps/OtherGroupComp';\r\nimport { uid } from 'react-uid';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Helper from '../scripts/helper.js';\r\nimport ExpensePopup from '../comps/ExpensePopup.js'\r\n\r\n/* This is the actual group page. the group page that has 3 columns*/\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      groupInput: \"\",\r\n      showPopup: false,\r\n      groupMemberAddInput: \"\",\r\n      addingMember: false\r\n    }\r\n    this.getInput = this.getInput.bind(this);\r\n    this.addMember = this.addMember.bind(this);\r\n    this.toggleAddUser = this.toggleAddUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const group = this.getGroup();\r\n    if (group !== undefined){\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether or not the expense popup is showing\r\n   */\r\n  togglePopup(){\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Scrolls to the bottom of the chat. Called when the component mounts.\r\n   */\r\n  scrollToBottomOfChat() {\r\n    const msgBox = document.querySelector(\".group-main-content\");\r\n    msgBox.scrollTop = msgBox.scrollHeight;\r\n  }\r\n\r\n  /**\r\n   * Return the group object that has this group number.\r\n   */\r\n  getGroup() {\r\n    const { group_number } = this.props.match.params;\r\n    const groups = Fetch.fetchGroups()\r\n    const thisGroupLst = groups.filter(g => g.id === parseInt(group_number))\r\n    return thisGroupLst[0]\r\n  }\r\n\r\n  /**\r\n   * Creates an new expense and adds it to the group timeline and sidebar.\r\n   * This method is passed on as a prop to the create new expense popup.\r\n   * Would need a server call to update our database with the new expense.\r\n   */\r\n  createExpense = (expense) => {\r\n    const newMsg = document.createElement(\"div\")\r\n    newMsg.id = expense.id\r\n    document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n    ReactDOM.render(<GroupMessage msg={expense} key={expense.id} update={this.updateSmallExpense} hideExpense={this.hideSmallExpense} admin={true}/>, document.querySelector(\"#\" + expense.id))\r\n    this.scrollToBottomOfChat();\r\n\r\n    // Create the small expense in the sidebar.\r\n    const newSmallExpense = (\r\n      <div key={uid(expense)} onClick={(e) => this.scrollToExpense(e, expense)}>\r\n        <OtherExpense msg={expense} />\r\n      </div>\r\n    )\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = uid(expense);\r\n    document.querySelector(\".group-col-other-ul\").appendChild(newDiv);\r\n    ReactDOM.render(newSmallExpense, document.querySelector(\".\" + uid(expense)));\r\n    \r\n  }\r\n\r\n  /**\r\n   * Creates a new chat message and adds it to the group timeline based on the chat input field.\r\n   * Would need a server call to update our database with the new chat, as well as obtain the current logged in user.\r\n   */\r\n  getInput(e) {\r\n    const val = this.state.groupInput;\r\n    if ((e.keyCode === 13 || e.target === document.querySelector(\".group-main-send-btn\") || e.target === document.querySelector(\".fa-paper-plane\")) && val !== \"\") {\r\n      //Here we would need to get the current user object from a server. for now, just use this dummy user.\r\n      const m = {\r\n        \"id\": 123,\r\n        \"groupId\": this.getGroup().id,\r\n        \"date\": (new Date()).getTime() / 1000,\r\n        \"type\": \"msg\",\r\n        \"user\":\r\n        {\r\n          \"id\": 0,\r\n          \"username\": \"admin\",\r\n          \"password\": \"admin\",\r\n          \"picUrl\": \"https://api.adorable.io/avatars/200/0\",\r\n          \"email\": \"dummy@dummy.com\",\r\n          \"firstName\": \"Firstname\",\r\n          \"lastName\": \"McLastname\"\r\n        },\r\n        \"content\": val\r\n      }\r\n      m.id = uid(m);\r\n      const newMsg = document.createElement(\"div\")\r\n      newMsg.id = m.id\r\n      document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n      \r\n      ReactDOM.render(<GroupMessage msg={m} key={m.id} admin={true}/>, document.querySelector(\"#\" + m.id))\r\n\r\n      //Reset the state, and make textbox empty\r\n      document.querySelector(\"#group-input\").value = \"\"\r\n      this.setState({\r\n        \"groupInput\": \"\"\r\n      })\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new user to the group's member list.\r\n   * Would need a server call to update the group's new member in our database.\r\n   */\r\n  addMember(e){\r\n    //button or enter key\r\n    if (e.target.id === \"group-add-member-accept-btn\" || e.keyCode === 13){\r\n      const users = Fetch.fetchUsers();\r\n      const usersFiltered = users.filter( u => u.username === this.state.groupMemberAddInput);\r\n      if (usersFiltered.length === 0){\r\n        alert(\"no user by that username\")\r\n        return;\r\n      }\r\n      const groupMembers = this.getGroup().members;\r\n      const usersInGroupWithSameUsername = groupMembers.filter( m => m.username === this.state.groupMemberAddInput);\r\n      if (usersInGroupWithSameUsername.length !== 0){\r\n        alert(\"that user is already in this group!\");\r\n        return;\r\n      }\r\n      else {\r\n        // here we would make the server call to update our database\r\n        const newDiv = document.createElement(\"div\");\r\n        const newDivClass = String(uid(usersFiltered[0]));\r\n        newDiv.className =  newDivClass;\r\n        document.querySelector(\".group-generated-members\").appendChild(newDiv);\r\n        ReactDOM.render(<GroupMember member={usersFiltered[0]} admin={true}/>, document.querySelector(\".\"+newDivClass));\r\n        document.querySelector(\"#group-add-member-input\").value = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether the add new user input field is displayed.\r\n   */\r\n  toggleAddUser(){\r\n    const addUserInput = document.querySelector(\".group-add-member-input-container\");\r\n    const addMemberCntr = document.querySelector(\".group-add-member-container\");\r\n    if (!this.state.addingMember){\r\n      addUserInput.style.display = \"block\";\r\n      addMemberCntr.style.display = \"none\";\r\n    }\r\n    else {\r\n      addUserInput.style.display = \"none\";\r\n      addMemberCntr.style.display = \"block\";\r\n    }\r\n    this.setState({\r\n      addingMember: !this.state.addingMember\r\n    });\r\n    \r\n  }\r\n\r\n  /**\r\n   * Scrolls to the msg in question. Called when you click on the expense in the \r\n   * sidebar.\r\n   */\r\n  scrollToExpense(event, msg){\r\n    const elem = document.querySelector(\"#group-main-profile-pic-id-\" + msg.id);\r\n    elem.scrollIntoView();\r\n  }\r\n\r\n  /**\r\n   * Updates the expense in the sidebar.\r\n   */\r\n  updateSmallExpense(id, amount){\r\n    const txt = document.querySelector(\".expense-small-id-\" + id + \" p\");\r\n    txt.innerText = `$${amount} remaining`;\r\n  }\r\n\r\n  /**\r\n   * Hides the expense in the sidebar. Called when an expense is finished paying.\r\n   */\r\n  hideSmallExpense(id){\r\n    document.querySelector(\".expense-small-id-\" + id).style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    const group = this.getGroup()\r\n    const groups = Fetch.fetchGroups()\r\n    const msgs = Fetch.fetchGroupMsgs()\r\n\r\n    //No group exists with this id. redirect to 404 page.\r\n    if (group === undefined) {\r\n      return <Redirect to='/404' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header user=\"admin\"/>\r\n        <div className=\"group-container\">\r\n          <div className=\"group-col group-members-col\">\r\n            <div className=\"group-members-div\">\r\n              <div className=\"group-generated-members\">\r\n              {\r\n                group.members.map(member => {\r\n                  return (\r\n                    <GroupMember member={member} key={uid(member)} admin={true} />\r\n                  )\r\n                })\r\n              }\r\n              </div>\r\n              <div className=\"group-add-member-container\">\r\n                <div className=\"group-add-member-inner\" onClick={this.toggleAddUser}>\r\n                  <div className=\"group-add-member-btn\" >\r\n                    <i className=\"fa fa-plus\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"group-add-member-input-container\">\r\n                \r\n                <input id=\"group-add-member-input\" type=\"text\" name=\"groupMemberAddInput\" placeholder=\"Enter Username\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.addMember}></input>\r\n                \r\n                <i className=\"fa fa-check\" id=\"group-add-member-accept-btn\" onClick={this.addMember}></i>\r\n                <div className=\"group-add-member-cancel-btn\" onClick={this.toggleAddUser}> Cancel </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"group-col group-main-col\">\r\n            <div>\r\n              <div className=\"group-title\">\r\n                {group.name}\r\n              </div>\r\n\r\n              <div className=\"group-main-add-btn\">\r\n                <button onClick={this.togglePopup.bind(this)}> <i className=\"fa fa-plus\"></i> New Expense</button>\r\n                {this.state.showPopup ? \r\n                  <ExpensePopup addExpense = {this.createExpense} closePopup={this.togglePopup.bind(this)} group={group} admin={true}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"group-main-content\">\r\n              {\r\n                msgs.filter(m => m.groupId === group.id).map(msg => {\r\n                  return (\r\n                    <GroupMessage msg={msg} key={uid(msg)} update={this.updateSmallExpense} hideExpense={this.hideSmallExpense} admin={true}/>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n            <div className=\"group-input-container\">\r\n              <input id=\"group-input\" type=\"text\" name=\"groupInput\" placeholder=\"Type something...\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.getInput}></input>\r\n              <div className=\"group-main-send-btn\" onClick={this.getInput}><i className=\"fa fa-paper-plane\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"group-col group-other-col\">\r\n            <div className=\"other-title-expenses\">\r\n              <div className=\"other-title\">\r\n                <h3>Current Expenses</h3>\r\n              </div>\r\n              <ul className=\"group-col-other-ul\">\r\n                {\r\n                  msgs.filter(m => m.groupId === group.id && m.type === \"expense\").map(msg => {\r\n                    return (\r\n                      <div key={uid(msg)} onClick={(e) => this.scrollToExpense(e, msg)}>\r\n                        <OtherExpense msg={msg} />\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n            <div className=\"other-title\">\r\n              <h3>Other Groups</h3>\r\n            </div>\r\n            <ul className=\"group-col-other-ul\">\r\n              {\r\n                /* Get all groups but current one*/\r\n                groups.filter(g => g.id !== group.id).map(g => {\r\n                  return (\r\n                    <OtherGroupComp group={g} key={uid(g)} admin={true} />\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group","/**\r\n * This is the Profile Page.\r\n * This is the view from the admin's perspective (as opposed to the user's)\r\n * The admin can rename fields. The user cannot (although the user should be \r\n * able to change their own fields when logging in is implemented).\r\n */\r\n\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Header from '../comps/Header'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport '../style/Profile.css'\r\nimport Helper from '../scripts/helper.js';\r\n\r\nclass Profile extends React.Component{\r\n    \r\n    state = {\r\n        user: undefined,\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        avatar: \"\",\r\n        description: \"\",\r\n        email: \"\", \r\n        pref: \"\",\r\n        paypal: \"\",\r\n        editing: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.getUser()\r\n        if (user){\r\n            this.setState({\r\n                firstname: user.firstName,\r\n                lastname: user.lastName,\r\n                avatar: user.picUrl,\r\n                description: user.description,  \r\n                email: user.email, \r\n                pref: user.preference,\r\n                paypal: user.paypal,\r\n                user: user\r\n            });\r\n            const pic = document.querySelector(\"#profile-pic-\" + user.id);\r\n            pic.style.backgroundImage = \"url('\" + user.picUrl + \"')\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Toggles whether the user can edit his or her information with displayed \r\n     * input fields. This is where we would need to update the server database that \r\n     * has the user's information too. (in the else section)\r\n     */\r\n    toggleEdit = () => {\r\n        if (!this.state.editing){\r\n            this.setState({\r\n                editing: true\r\n            });\r\n            document.querySelector(\".profile-edit-container\").style.display = \"block\";\r\n            document.querySelector(\".profile-save-btn\").style.display = \"block\";\r\n            document.querySelector(\".profile-edit-btn\").style.display = \"none\";\r\n        }\r\n        else {\r\n            this.setState({\r\n                editing: false\r\n            });\r\n            document.querySelector(\".profile-edit-container\").style.display = \"none\";\r\n            document.querySelector(\".profile-save-btn\").style.display = \"none\";\r\n            document.querySelector(\".profile-edit-btn\").style.display = \"block\";\r\n\r\n            const pic = document.querySelector(\"#profile-pic-\" + this.state.user.id);\r\n            pic.style.backgroundImage = \"url('\" + this.state.avatar + \"')\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the id number of this user.\r\n     */\r\n    getUserNum(){\r\n        const {user_number} = this.props.match.params\r\n        return user_number\r\n    }\r\n\r\n    /**\r\n     * Get the object representing this user\r\n     */\r\n    getUser(){\r\n        const userNumber = this.getUserNum();\r\n        const userList = Fetch.fetchUsers();\r\n        return userList.filter(user => user.id === parseInt(userNumber))[0];\r\n    }\r\n\r\n    render() {\r\n        const user = this.getUser();\r\n        if (user === undefined){\r\n            return <Redirect to='/404'/>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Header user=\"admin\"/>\r\n                <div className=\"profile-btn profile-edit-btn\" onClick={this.toggleEdit}>\r\n                    Edit <i className=\"fa fa-pencil\"></i>\r\n                </div>\r\n                <div className=\"profile-btn profile-save-btn\" onClick={this.toggleEdit}>\r\n                    Save <i className=\"fa fa-check\"></i>\r\n                </div>\r\n                \r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile-pic-and-name\">\r\n                        <div className=\"profile-pic\" id={\"profile-pic-\" + user.id}>\r\n                        </div>\r\n                        <div className=\"profile-name-container\">\r\n                            <h1>{user.username} <a href={this.state.paypal} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-cc-paypal\"></i></a></h1> \r\n                            {this.state.firstname} {this.state.lastname}\r\n                        </div>\r\n                        <div className=\"profile-desc\">\r\n                            <b>Description</b> \r\n                            <p>{this.state.description}</p>\r\n                            <br/>\r\n                            <b>Preferred Payment Method</b>\r\n                            <p>{this.state.pref}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-info-container\">\r\n                        <h3>Email</h3>\r\n                        <p>{this.state.email}</p>\r\n                    </div>\r\n                    <div className=\"profile-edit-container\">\r\n                        <p>First Name</p>\r\n                        <input type=\"text\" name=\"firstname\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.firstname}></input>\r\n                        <p>Last Name</p>\r\n                        <input type=\"text\" name=\"lastname\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.lastname}></input>\r\n                        <p>Avatar URL</p>\r\n                        <input type=\"text\" name=\"avatar\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.avatar}></input>\r\n                        <p>Description</p>\r\n                        <input type=\"text\" name=\"description\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.description}></input>\r\n                        <p>Preferred Payment Method</p>\r\n                        <input type=\"text\" name=\"pref\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.pref}></input>\r\n                        <p>Email</p>\r\n                        <input type=\"text\" name=\"email\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.email}></input>\r\n                        <p>PayPal URL</p>\r\n                        <input type=\"text\" name=\"paypal\" onChange={Helper.handleInputChange.bind(this)} defaultValue={this.state.paypal}></input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile ","import React from 'react'\r\n\r\nclass NoMatch extends React.Component {\r\n  /**\r\n   * our humorous 404 page :)\r\n   */\r\n  render() {\r\n    return (\r\n      <div className=\"no-match\">\r\n        <h3>Error 404</h3>\r\n        <a href=\"http://niceme.me/\" id=\"emoji-404\">\r\n        <span role=\"img\" aria-label=\"clap\">click👏to👏go👏to👏nicememe.com👏</span>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NoMatch","/**\r\n * This is the Group Page, where you select which group you want to open.\r\n * This is the view from the user's prospective (as opposed tot he admin's)\r\n * The admin can rename and delete groups. The user cannot.\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header.js';\r\nimport GroupComp from '../comps/GroupComp.js';\r\nimport Fetch from '../scripts/fetch.js';\r\nimport { uid } from 'react-uid';\r\nimport NewGroupPopup from '../comps/NewGroupPopup.js';\r\nimport axios from 'axios';\r\n\r\nclass GroupsPage extends React.Component {\r\n\r\n  groups = Fetch.fetchGroups();\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state = { \r\n      groups: [],\r\n      showPopup: false,\r\n     };\r\n  }\r\n\r\n  componentDidMount(){\r\n    axios.get('/api/groups')\r\n    .then(response => {\r\n      console.log(response);\r\n    })\r\n    .catch( err => console.log(err))\r\n  }\r\n\r\n  /**\r\n   * Opens the new group popup.\r\n   */\r\n  openPopup() {\r\n    if(this.state.showPopup === false){\r\n      this.setState({\r\n        showPopup: true\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Closes the new group popup.\r\n   */\r\n  closePopup() {\r\n    if(this.state.showPopup === true){\r\n      this.setState({\r\n        showPopup: false\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Creates an new group and adds it to the groups page.\r\n   * This method is passed on as a prop to the create new group popup.\r\n   * Would need a server call to update our database with the new group.\r\n   */\r\n  createGroup = (group) => {\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = \"new-group-\" + uid(group);\r\n    document.querySelector(\".new-groups-div\").appendChild(newDiv);\r\n    ReactDOM.render(<GroupComp key={ uid(group) }\r\n                          name={ group.name }\r\n                          icon={ group.icon }\r\n                          colorBg={ group.colorBg }\r\n                          id={ uid(group) }\r\n                          members={ group.members }\r\n                          admin={false}\r\n                      />, document.querySelector(\".new-group-\" + uid(group)));    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header user=\"user\"/>\r\n        <ul className=\"group-ul\">\r\n          {\r\n            this.groups.map( group => {\r\n              return (\r\n                  <GroupComp key={ uid(group) }\r\n                        name={ group.name }\r\n                        icon={ group.icon }\r\n                        colorBg={ group.colorBg }\r\n                        id={ group.id }\r\n                        members={ group.members }\r\n                        admin={false}\r\n                  />\r\n              )\r\n            })\r\n          }\r\n          <div className=\"new-groups-div\"> </div>\r\n          <div className=\"group-div\">\r\n            <div className=\"group-add-btn\" onClick={this.openPopup.bind(this)}>\r\n              <div className=\"group-add-icon-container\">\r\n                <i className=\"fa fa-plus\"></i>\r\n                {this.state.showPopup ? \r\n                  <NewGroupPopup addGroup = {this.createGroup} closePopup={this.closePopup.bind(this)}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </ul>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GroupsPage","/*\r\nThis is the group page from the USER prospective (as opposed to the admin's).\r\nThe user cannot delete users or messages. The admin can.\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Header from '../comps/Header';\r\nimport OtherExpense from '../comps/OtherExpense';\r\nimport GroupMessage from '../comps/GroupMessage';\r\nimport Fetch from '../scripts/fetch.js';\r\nimport GroupMember from '../comps/GroupMember';\r\nimport OtherGroupComp from '../comps/OtherGroupComp';\r\nimport { uid } from 'react-uid';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Helper from '../scripts/helper.js';\r\nimport ExpensePopup from '../comps/ExpensePopup.js'\r\n\r\n/* This is the actual group page. the group page that has 3 columns*/\r\n\r\nclass Group extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      groupInput: \"\",\r\n      showPopup: false,\r\n      groupMemberAddInput: \"\",\r\n      addingMember: false\r\n    }\r\n    this.getInput = this.getInput.bind(this);\r\n    this.addMember = this.addMember.bind(this);\r\n    this.toggleAddUser = this.toggleAddUser.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const group = this.getGroup();\r\n    if (group !== undefined){\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether or not the expense popup is showing\r\n   */\r\n  togglePopup(){\r\n    this.setState({\r\n      showPopup: !this.state.showPopup\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Scrolls to the bottom of the chat. Called when the component mounts.\r\n   */\r\n  scrollToBottomOfChat() {\r\n    const msgBox = document.querySelector(\".group-main-content\");\r\n    msgBox.scrollTop = msgBox.scrollHeight;\r\n  }\r\n\r\n  /**\r\n   * Return the group object that has this group number.\r\n   */\r\n  getGroup() {\r\n    const { group_number } = this.props.match.params;\r\n    const groups = Fetch.fetchGroups()\r\n    const thisGroupLst = groups.filter(g => g.id === parseInt(group_number))\r\n    return thisGroupLst[0]\r\n  }\r\n\r\n  /**\r\n   * Creates an new expense and adds it to the group timeline and sidebar.\r\n   * This method is passed on as a prop to the create new expense popup.\r\n   * Would need a server call to update our database with the new expense.\r\n   */\r\n  createExpense = (expense) => {\r\n    const newMsg = document.createElement(\"div\")\r\n    newMsg.id = expense.id\r\n    document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n    ReactDOM.render(<GroupMessage msg={expense} key={expense.id} update={this.updateSmallExpense} admin={false} hideExpense={this.hideSmallExpense}/>, document.querySelector(\"#\" + expense.id))\r\n    this.scrollToBottomOfChat();\r\n\r\n    // Create the small expense in the sidebar.\r\n    const newSmallExpense = (\r\n      <div key={uid(expense)} onClick={(e) => this.scrollToExpense(e, expense)}>\r\n        <OtherExpense msg={expense} />\r\n      </div>\r\n    )\r\n    const newDiv = document.createElement(\"div\");\r\n    newDiv.className = uid(expense);\r\n    document.querySelector(\".group-col-other-ul\").appendChild(newDiv);\r\n    ReactDOM.render(newSmallExpense, document.querySelector(\".\" + uid(expense)));\r\n    \r\n  }\r\n\r\n  /**\r\n   * Creates a new chat message and adds it to the group timeline based on the chat input field.\r\n   * Would need a server call to update our database with the new chat, as well as obtain the current logged in user.\r\n   */\r\n  getInput(e) {\r\n    const val = this.state.groupInput;\r\n    if ((e.keyCode === 13 || e.target === document.querySelector(\".group-main-send-btn\") || e.target === document.querySelector(\".fa-paper-plane\")) && val !== \"\") {\r\n\r\n      //Here we would need to get the current user object from a server. for now, just use this dummy user.\r\n      const m = {\r\n        \"id\": 123,\r\n        \"groupId\": this.getGroup().id,\r\n        \"date\": (new Date()).getTime() / 1000,\r\n        \"type\": \"msg\",\r\n        \"user\":\r\n        {\r\n          \"id\": 1,\r\n          \"username\": \"user\",\r\n          \"password\": \"user\",\r\n          \"picUrl\": \"https://api.adorable.io/avatars/200/1\",\r\n          \"email\": \"dummy@dummy.com\",\r\n          \"firstName\": \"Firstname\",\r\n          \"lastName\": \"McLastname\"\r\n        },\r\n        \"content\": val\r\n      }\r\n      m.id = uid(m);\r\n      const newMsg = document.createElement(\"div\")\r\n      newMsg.id = m.id\r\n      document.querySelector(\".group-main-content\").appendChild(newMsg)\r\n      \r\n      ReactDOM.render(<GroupMessage msg={m} key={m.id} admin={false} />, document.querySelector(\"#\" + m.id))\r\n\r\n      //Reset the state, and make textbox empty\r\n      document.querySelector(\"#group-input\").value = \"\"\r\n      this.setState({\r\n        \"groupInput\": \"\"\r\n      })\r\n      this.scrollToBottomOfChat();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a new user to the group's member list.\r\n   * Would need a server call to update the group's new member in our database.\r\n   */\r\n  addMember(e){\r\n    if (e.target.id === \"group-add-member-accept-btn\" || e.keyCode === 13){\r\n      const users = Fetch.fetchUsers();\r\n      const usersFiltered = users.filter( u => u.username === this.state.groupMemberAddInput);\r\n      if (usersFiltered.length === 0){\r\n        alert(\"no user by that username\")\r\n        return;\r\n      }\r\n      const groupMembers = this.getGroup().members;\r\n      const usersInGroupWithSameUsername = groupMembers.filter( m => m.username === this.state.groupMemberAddInput);\r\n      if (usersInGroupWithSameUsername.length !== 0){\r\n        alert(\"that user is already in this group!\");\r\n        return;\r\n      }\r\n      else {\r\n        //We dont check if you add the same member twice (altho this doesnt work anyways), \r\n        //here we would have to update this group.members list (but we cant cuz its in json)\r\n        const newDiv = document.createElement(\"div\");\r\n        const newDivClass = String(uid(usersFiltered[0]));\r\n        newDiv.className =  newDivClass;\r\n        document.querySelector(\".group-generated-members\").appendChild(newDiv);\r\n        ReactDOM.render(<GroupMember member={usersFiltered[0]} admin={false}/>, document.querySelector(\".\"+newDivClass));\r\n        document.querySelector(\"#group-add-member-input\").value = \"\";\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles whether the add new user input field is displayed.\r\n   */\r\n  toggleAddUser(){\r\n    const addUserInput = document.querySelector(\".group-add-member-input-container\");\r\n    const addMemberCntr = document.querySelector(\".group-add-member-container\");\r\n    if (!this.state.addingMember){\r\n      addUserInput.style.display = \"block\";\r\n      addMemberCntr.style.display = \"none\";\r\n    }\r\n    else {\r\n      addUserInput.style.display = \"none\";\r\n      addMemberCntr.style.display = \"block\";\r\n    }\r\n    this.setState({\r\n      addingMember: !this.state.addingMember\r\n    });\r\n    \r\n  }\r\n\r\n  /**\r\n   * Scrolls to the msg in question. Called when you click on the expense in the \r\n   * sidebar.\r\n   */\r\n  scrollToExpense(event, msg){\r\n    const elem = document.querySelector(\"#group-main-profile-pic-id-\" + msg.id);\r\n    elem.scrollIntoView();\r\n  }\r\n\r\n  /**\r\n   * Updates the expense in the sidebar.\r\n   */\r\n  updateSmallExpense(id, amount){\r\n    const txt = document.querySelector(\".expense-small-id-\" + id + \" p\");\r\n    txt.innerText = `$${amount} remaining`;\r\n  }\r\n\r\n  /**\r\n   * Hides the expense in the sidebar. Called when an expense is finished paying.\r\n   */\r\n  hideSmallExpense(id){\r\n    document.querySelector(\".expense-small-id-\" + id).style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    const group = this.getGroup()\r\n    const groups = Fetch.fetchGroups()\r\n    const msgs = Fetch.fetchGroupMsgs()\r\n\r\n    //No group exists with this id. redirect to 404 page.\r\n    if (group === undefined) {\r\n      return <Redirect to='/404' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header user=\"user\"/>\r\n        <div className=\"group-container\">\r\n          <div className=\"group-col group-members-col\">\r\n            <div className=\"group-members-div\">\r\n              <div className=\"group-generated-members\">\r\n              {\r\n                group.members.map(member => {\r\n                  return (\r\n                    <GroupMember member={member} key={uid(member)} admin={false} />\r\n                  )\r\n                })\r\n              }\r\n              </div>\r\n              <div className=\"group-add-member-container\">\r\n                <div className=\"group-add-member-inner\" onClick={this.toggleAddUser}>\r\n                  <div className=\"group-add-member-btn\" >\r\n                    <i className=\"fa fa-plus\"></i>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"group-add-member-input-container\">\r\n                \r\n                <input id=\"group-add-member-input\" type=\"text\" name=\"groupMemberAddInput\" placeholder=\"Enter Username\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.addMember}></input>\r\n                \r\n                <i className=\"fa fa-check\" id=\"group-add-member-accept-btn\" onClick={this.addMember}></i>\r\n                <div className=\"group-add-member-cancel-btn\" onClick={this.toggleAddUser}> Cancel </div>\r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"group-col group-main-col\">\r\n            <div>\r\n              <div className=\"group-title\">\r\n                {group.name}\r\n              </div>\r\n\r\n              <div className=\"group-main-add-btn\">\r\n                <button onClick={this.togglePopup.bind(this)}> <i className=\"fa fa-plus\"></i> New Expense</button>\r\n                {this.state.showPopup ? \r\n                  <ExpensePopup addExpense = {this.createExpense} closePopup={this.togglePopup.bind(this)} group={group}/>\r\n                  : null}\r\n              </div>\r\n              \r\n            </div>\r\n            <div className=\"group-main-content\">\r\n              {\r\n                msgs.filter(m => m.groupId === group.id).map(msg => {\r\n                  return (\r\n                    <GroupMessage msg={msg} key={uid(msg)} update={this.updateSmallExpense} hideExpense={this.hideSmallExpense} admin={false}/>\r\n                  )\r\n                })\r\n              }\r\n\r\n            </div>\r\n            <div className=\"group-input-container\">\r\n              <input id=\"group-input\" type=\"text\" name=\"groupInput\" placeholder=\"Type something...\" onChange={Helper.handleInputChange.bind(this)} maxLength=\"150\" onKeyDown={this.getInput}></input>\r\n              <div className=\"group-main-send-btn\" onClick={this.getInput}><i className=\"fa fa-paper-plane\"></i></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"group-col group-other-col\">\r\n            <div className=\"other-title-expenses\">\r\n              <div className=\"other-title\">\r\n                <h3>Current Expenses</h3>\r\n              </div>\r\n              <ul className=\"group-col-other-ul\">\r\n                {\r\n                  msgs.filter(m => m.groupId === group.id && m.type === \"expense\").map(msg => {\r\n                    return (\r\n                      <div key={uid(msg)} onClick={(e) => this.scrollToExpense(e, msg)}>\r\n                        <OtherExpense msg={msg} />\r\n                      </div>\r\n                    );\r\n                  })\r\n                }\r\n              </ul>\r\n            </div>\r\n            <div className=\"other-title\">\r\n              <h3>Other Groups</h3>\r\n            </div>\r\n            <ul className=\"group-col-other-ul\">\r\n              {\r\n                /* Get all groups but current one*/\r\n                groups.filter(g => g.id !== group.id).map(g => {\r\n                  return (\r\n                    <OtherGroupComp group={g} key={uid(g)} />\r\n                  )\r\n                })\r\n              }\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Group","/**\r\n * This is the profile view from the USERS perpsective  (as opposed to the admin's)\r\n * The admin can edit fields. The user cannot.\r\n */\r\n\r\n\r\nimport React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Header from '../comps/Header'\r\nimport Fetch from '../scripts/fetch.js';\r\nimport '../style/Profile.css'\r\n\r\nclass Profile extends React.Component{\r\n    \r\n    state = {\r\n        user: undefined,\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        avatar: \"\",\r\n        description: \"\",\r\n        email: \"\", \r\n        pref: \"\",\r\n        paypal: \"\",\r\n        editing: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        const user = this.getUser()\r\n        if (user){\r\n            this.setState({\r\n                firstname: user.firstName,\r\n                lastname: user.lastName,\r\n                avatar: user.picUrl,\r\n                description: user.description,  \r\n                email: user.email, \r\n                pref: user.preference,\r\n                paypal: user.paypal,\r\n                user: user\r\n            });\r\n            const pic = document.querySelector(\"#profile-pic-\" + user.id);\r\n            pic.style.backgroundImage = \"url('\" + user.picUrl + \"')\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the id number of this user.\r\n     */\r\n    getUserNum(){\r\n        const {user_number} = this.props.match.params\r\n        return user_number\r\n    }\r\n\r\n    /**\r\n     * Get the object representing this user\r\n     */\r\n    getUser(){\r\n        const userNumber = this.getUserNum();\r\n        const userList = Fetch.fetchUsers();\r\n        return userList.filter(user => user.id === parseInt(userNumber))[0];\r\n    }\r\n\r\n    render() {\r\n        const user = this.getUser();\r\n        if (user === undefined){\r\n            return <Redirect to='/404'/>\r\n        }\r\n        \r\n        return (\r\n            <div>\r\n                <Header user=\"user\"/>\r\n                \r\n                <div className=\"profile-container\">\r\n                    <div className=\"profile-pic-and-name\">\r\n                        <div className=\"profile-pic\" id={\"profile-pic-\" + user.id}>\r\n                        </div>\r\n                        <div className=\"profile-name-container\">\r\n                            <h1>{user.username} <a href={this.state.paypal} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fa fa-cc-paypal\"></i></a></h1> \r\n                            {this.state.firstname} {this.state.lastname}\r\n                        </div>\r\n                        <div className=\"profile-desc\">\r\n                            <b>Description</b> \r\n                            <p>{this.state.description}</p>\r\n                            <br/>\r\n                            <b>Preferred Payment Method</b>\r\n                            <p>{this.state.pref}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile-info-container\">\r\n                        <h3>Email</h3>\r\n                        <p>{this.state.email}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile ","import React from 'react';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\nimport './style/App.css';\r\nimport './style/Landing.css';\r\nimport './style/Login.css';\r\nimport './style/Group.css';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport './style/NewGroup.css';\r\n\r\n\r\nimport GroupsPage from './pages/GroupsPage';\r\nimport LandingPage from './pages/LandingPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport Group from './pages/Group';\r\nimport Profile from './pages/Profile';\r\nimport NoMatch from './pages/NoMatch';\r\n\r\n\r\n//Dummy components specifically for user, instead of admin.\r\nimport USERGroupsPage from './pages/USERGroupsPage';\r\nimport USERGroup from './pages/USERGroup';\r\nimport USERProfile from './pages/USERProfile';\r\n\r\n/*\r\nTODO:\r\n*******************\r\nGROUP\r\nClick on user -> Little popup with link to profile, discord style\r\n\r\n*******************\r\nEXPENSES\r\nVariable/uneven debts\r\n*******************\r\nADMIN FUNCTIONALITY (*)\r\nDifferent views for admin and user (admin can see remove and edit options)\r\n*******************\r\nUSER PAGE\r\nSee joined groups\r\nSee owed debts\r\nSee user debts\r\n*******************\r\nSome sort of ping system\r\ndo the README\r\n*/\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          <Switch>\r\n            <Route exact path='/' component={LandingPage} />\r\n            <Route exact path='/groups' component={USERGroupsPage} />\r\n            <Route exact path='/login' component={LoginPage} />\r\n            <Route exact path='/register' component={RegisterPage} />\r\n            <Route exact path='/g/:group_number' component={USERGroup} />\r\n            <Route exact path='/u/:user_number' component={USERProfile} />\r\n\r\n            <Route exact path='/u/:user_number/admin' component={Profile} />\r\n            <Route exact path='/groups/admin' component={GroupsPage} />\r\n            <Route exact path='/g/:group_number/admin' component={Group} />\r\n\r\n            <Route component={NoMatch} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}